@page "/circular-gauge/range-customization"

@using Microsoft.AspNetCore.Components
@using Syncfusion.Blazor
@using Syncfusion.Blazor.CircularGauge
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Buttons
@using ThemeHelper
@inject NavigationManager NavigationManager
@*Hidden:Lines*@
@inherits SampleBaseComponent
<PageTitle>Blazor Circular Gauge Range Customization Example - Syncfusion Demos</PageTitle>
<HeadContent>
    <meta name="description" content="This example demonstrates the Range Customization in Blazor Circular Gauge Component. Explore here for more details." />
    <link rel="canonical" href="@canonicalURL" />
</HeadContent>
@*End:Hidden*@

<SampleDescription>
    <p>This sample demonstrates how to highlight a region in an axis using ranges in the circular gauge. The width, corner radius, and start and end range of a range can all be customized.</p>
</SampleDescription>
<ActionDescription>
    <p>
        In this example, you can see how to render and configure the ranges in the circular gauge. Ranges are used to group the axis values, and you can use <a target='_blank' class='code' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.CircularGauge.CircularGaugeRange.html#Syncfusion_Blazor_CircularGauge_CircularGaugeRange_Start'>Start</a>, <a target='_blank' class='code' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.CircularGauge.CircularGaugeRange.html#Syncfusion_Blazor_CircularGauge_CircularGaugeRange_End'>End</a>, <a target='_blank' class='code' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.CircularGauge.CircularGaugeRange.html#Syncfusion_Blazor_CircularGauge_CircularGaugeRange_StartWidth'>StartWidth</a>, <a target='_blank' class='code' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.CircularGauge.CircularGaugeRange.html#Syncfusion_Blazor_CircularGauge_CircularGaugeRange_EndWidth'>EndWidth</a>, <a target='_blank' class='code' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.CircularGauge.CircularGaugeRange.html#Syncfusion_Blazor_CircularGauge_CircularGaugeRange_Radius'>Radius</a> and <a target='_blank' class='code' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.CircularGauge.CircularGaugeRange.html#Syncfusion_Blazor_CircularGauge_CircularGaugeRange_RoundedCornerRadius'>RoundedCornerRadius</a> properties to customize them.
        In addition, an axis with multiple ranges is shown in the circular gauge component, as well as options to customize the range properties via the property panel.
    </p>
    <p>More information on the ranges can be found in this <a target='_blank' href='https://blazor.syncfusion.com/documentation/circular-gauge/ranges'>documentation section</a>.</p>
</ActionDescription>

<style>
    tr {
        height: 40px;
    }

    td {
        width: 40%;
    }

    .value {
        margin-left: 10px;
    }

    .templateText {
        margin-left: -33px
    }

    .e-slider {
        height: 40px !important;
    }
</style>

<div class="col-lg-8 control-section sb-property-border">
    <div class="show-background">
    <SfCircularGauge Theme="@Theme" Background="transparent">
        <CircularGaugeAxes>
            <CircularGaugeAxis StartAngle="210" EndAngle="150" Minimum="0" Maximum="120" Radius="80%">
                <CircularGaugeAxisLineStyle Width="10" Color="transparent" />
                <CircularGaugeAxisLabelStyle>
                    <CircularGaugeAxisLabelFont FontFamily="inherit"></CircularGaugeAxisLabelFont>
                </CircularGaugeAxisLabelStyle>
                <CircularGaugeAxisMajorTicks Height="10" Offset="5" />
                <CircularGaugeAxisMinorTicks Height="0" Width="0" />
                <CircularGaugeAnnotations>
                    <CircularGaugeAnnotation Radius="25%" Angle="30" ZIndex="1">
                        <ContentTemplate>
                            <div><span class="templateText" style="font-size:12px;">Speedometer</span></div>
                        </ContentTemplate>
                    </CircularGaugeAnnotation>
                    <CircularGaugeAnnotation Radius="50%" Angle="165" ZIndex="1">
                        <ContentTemplate>
                            <div><span class="templateText" style="font-size:14px;margin-left: -25px;">65 MPH</span></div>
                        </ContentTemplate>
                    </CircularGaugeAnnotation>
                </CircularGaugeAnnotations>
                <CircularGaugeRanges>
                    <CircularGaugeRange Start="@LowRangeStart" End="@LowRangeEnd" Color="#30B32D" StartWidth="@LowRangeStartWidth" EndWidth="@LowRangeEndWidth" RoundedCornerRadius="@LowRangeCornerRadius" />
                    <CircularGaugeRange Start="@MediumRangeStart" End="@MediumRangeEnd" Color="#FFDD00" StartWidth="@MediumRangeStartWidth" EndWidth="@MediumRangeEndWidth" RoundedCornerRadius="@MediumRangeCornerRadius" />
                    <CircularGaugeRange Start="@HighRangeStart" End="@HighRangeEnd" Color="#F03E3E" StartWidth="@HighRangeStartWidth" EndWidth="@HighRangeEndWidth" RoundedCornerRadius="@HighRangeCornerRadius" />
                </CircularGaugeRanges>
                <CircularGaugePointers>
                    <CircularGaugePointer Value="65" Radius="60%" PointerWidth="8">
                        <CircularGaugePointerAnimation Enable="@GaugeAnimation" />
                        <CircularGaugeCap Radius="7" />
                        <CircularGaugeNeedleTail Length="18%" />
                    </CircularGaugePointer>
                </CircularGaugePointers>
            </CircularGaugeAxis>
        </CircularGaugeAxes>
    </SfCircularGauge>
    </div>
</div>
<button id="toggle-button" onclick="togglePropertySection()">
    <svg width="22" height="16" viewBox="0 0 22 16" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M13.9531 12.1719H20.8438L20.9844 12.1953L21.125 12.2422L21.2656 12.3125L21.3594 12.4062L21.4531 12.5L21.5234 12.6406L21.5703 12.7812L21.5938 12.9219L21.5703 13.0625L21.5234 13.2031L21.4531 13.3438L21.3594 13.4375L21.2656 13.5312L21.125 13.6016L20.9844 13.6484L20.8438 13.6719H13.9531L13.8125 13.6484L13.6719 13.6016L13.5312 13.5312L13.4375 13.4375L13.3438 13.3438L13.2734 13.2031L13.2266 13.0625L13.2031 12.9219L13.2266 12.7812L13.2734 12.6406L13.3438 12.5L13.4375 12.4062L13.5312 12.3125L13.6719 12.2422L13.8125 12.1953L13.9531 12.1719ZM8.04688 11.7031H7.92969L7.78906 11.7266L7.57812 11.7969L7.36719 11.8906L7.17969 12.0547L7.01562 12.2422L6.92188 12.4531L6.85156 12.6641L6.82812 12.9219L6.85156 13.1797L6.92188 13.3906L7.01562 13.6016L7.17969 13.7891L7.36719 13.9531L7.57812 14.0469L7.78906 14.1172L8.04688 14.1406L8.30469 14.1172L8.51562 14.0469L8.72656 13.9531L8.91406 13.7891L9.07812 13.6016L9.17188 13.3906L9.24219 13.1797L9.26562 12.9219L9.24219 12.6641L9.17188 12.4531L9.07812 12.2422L8.91406 12.0547L8.72656 11.8906L8.51562 11.7969L8.30469 11.7266L8.04688 11.7031ZM8.04688 10.2031L8.32812 10.2266L8.58594 10.2734L8.84375 10.3438L9.10156 10.4375L9.33594 10.5312L9.57031 10.6719L9.75781 10.8359L9.96875 11L10.1328 11.2109L10.2969 11.3984L10.4375 11.6328L10.5312 11.8672L10.625 12.125L10.6953 12.3828L10.7422 12.6406L10.7656 12.9219L10.7422 13.2031L10.6953 13.4609L10.625 13.7188L10.5312 13.9766L10.4375 14.2109L10.2969 14.4453L10.1328 14.6328L9.96875 14.8438L9.75781 15.0078L9.57031 15.1719L9.33594 15.3125L9.10156 15.4062L8.84375 15.5L8.58594 15.5703L8.32812 15.6172L8.04688 15.6406L7.8125 15.6172L7.60156 15.5938L7.39062 15.5469L7.17969 15.4766L6.96875 15.4062L6.78125 15.3125L6.59375 15.2188L6.42969 15.1016L6.26562 14.9609L6.10156 14.8203L5.96094 14.6562L5.84375 14.4922L5.72656 14.3047L5.63281 14.1172L5.53906 13.9297L5.44531 13.6719H1.15625L1.01562 13.6484L0.875 13.6016L0.734375 13.5312L0.640625 13.4375L0.546875 13.3438L0.476562 13.2031L0.429688 13.0625L0.40625 12.9219L0.429688 12.7812L0.476562 12.6406L0.546875 12.5L0.640625 12.4062L0.734375 12.3125L0.875 12.2422L1.01562 12.1953L1.15625 12.1719H5.44531L5.53906 11.9141L5.63281 11.7266L5.72656 11.5391L5.84375 11.3516L5.96094 11.1875L6.10156 11.0234L6.26562 10.8828L6.42969 10.7422L6.59375 10.625L6.78125 10.5312L6.96875 10.4375L7.17969 10.3672L7.39062 10.2969L7.60156 10.25L7.8125 10.2266L8.04688 10.2031ZM1.15625 2.32812H8.04688L8.1875 2.35156L8.32812 2.39844L8.46875 2.46875L8.5625 2.5625L8.65625 2.65625L8.72656 2.79688L8.77344 2.9375L8.79688 3.07812L8.77344 3.21875L8.72656 3.35938L8.65625 3.5L8.5625 3.59375L8.46875 3.6875L8.32812 3.75781L8.1875 3.80469L8.04688 3.82812H1.15625L1.01562 3.80469L0.875 3.75781L0.734375 3.6875L0.640625 3.59375L0.546875 3.5L0.476562 3.35938L0.429688 3.21875L0.40625 3.07812L0.429688 2.9375L0.476562 2.79688L0.546875 2.65625L0.640625 2.5625L0.734375 2.46875L0.875 2.39844L1.01562 2.35156L1.15625 2.32812ZM13.9531 1.85938H13.8359L13.6953 1.88281L13.4844 1.95312L13.2734 2.04688L13.0859 2.21094L12.9219 2.39844L12.8281 2.60938L12.7578 2.82031L12.7344 3.07812L12.7578 3.33594L12.8281 3.54688L12.9219 3.75781L13.0859 3.94531L13.2734 4.10938L13.4844 4.20312L13.6953 4.27344L13.9531 4.29688L14.2109 4.27344L14.4219 4.20312L14.6328 4.10938L14.8203 3.94531L14.9844 3.75781L15.0781 3.54688L15.1484 3.33594L15.1719 3.07812L15.1484 2.82031L15.0781 2.60938L14.9844 2.39844L14.8203 2.21094L14.6328 2.04688L14.4219 1.95312L14.2109 1.88281L13.9531 1.85938ZM13.9531 0.359375L14.1875 0.382812L14.3984 0.40625L14.6094 0.453125L14.8203 0.523438L15.0312 0.59375L15.2188 0.6875L15.4062 0.78125L15.5703 0.898438L15.7344 1.03906L15.8984 1.17969L16.0391 1.34375L16.1562 1.50781L16.2734 1.69531L16.3672 1.88281L16.4609 2.07031L16.5547 2.35156H20.8438H20.9844L21.125 2.39844L21.2656 2.46875L21.3594 2.5625L21.4531 2.65625L21.5234 2.79688L21.5703 2.9375L21.5938 3.07812L21.5703 3.21875L21.5234 3.35938L21.4531 3.5L21.3594 3.59375L21.2656 3.6875L21.125 3.75781L20.9844 3.80469L20.8438 3.82812H16.5547L16.4609 4.08594L16.3672 4.27344L16.2734 4.46094L16.1562 4.64844L16.0391 4.8125L15.8984 4.97656L15.7344 5.11719L15.5703 5.25781L15.4062 5.375L15.2188 5.46875L15.0312 5.5625L14.8203 5.63281L14.6094 5.70312L14.3984 5.75L14.1875 5.77344L13.9531 5.79688L13.6719 5.77344L13.4141 5.72656L13.1562 5.65625L12.8984 5.5625L12.6641 5.46875L12.4297 5.32812L12.2422 5.16406L12.0312 5L11.8672 4.78906L11.7031 4.60156L11.5625 4.36719L11.4688 4.13281L11.375 3.875L11.3047 3.61719L11.2578 3.35938L11.2344 3.07812L11.2578 2.79688L11.3047 2.53906L11.375 2.28125L11.4688 2.02344L11.5625 1.78906L11.7031 1.55469L11.8672 1.36719L12.0312 1.15625L12.2422 0.992188L12.4297 0.828125L12.6641 0.6875L12.8984 0.59375L13.1562 0.5L13.4141 0.429688L13.6719 0.382812L13.9531 0.359375Z" fill="white" />
    </svg>
</button>
<div class="col-lg-4 property-section" id="property-section">
    <div class="property-panel-section">
        <div class="property-panel-header">Properties</div>
        <div class="property-panel-content">
            <svg onclick="togglePropertySection()" role="button" tabindex="0" aria-label="Toggle settings" title='Toggle Settings' id="close-settings" width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M1.25781 0.4375H1.33594L1.49219 0.476562L1.64844 0.535156L1.78516 0.613281L7 5.84766L12.2148 0.613281L12.3516 0.535156L12.5078 0.476562L12.6641 0.4375H12.8203L12.9766 0.476562L13.1328 0.535156L13.2695 0.613281L13.3867 0.730469L13.4648 0.867188L13.5234 1.02344L13.5625 1.17969V1.33594L13.5234 1.49219L13.4648 1.64844L13.3867 1.78516L8.15234 7L13.3867 12.2148L13.4648 12.3516L13.5234 12.5078L13.5625 12.6641V12.8203L13.5234 12.9766L13.4648 13.1328L13.3867 13.2695L13.2695 13.3867L13.1328 13.4648L12.9766 13.5234L12.8203 13.5625H12.6641L12.5078 13.5234L12.3516 13.4648L12.2148 13.3867L7 8.15234L1.78516 13.3867L1.64844 13.4648L1.49219 13.5234L1.33594 13.5625H1.17969L1.02344 13.5234L0.867188 13.4648L0.730469 13.3867L0.613281 13.2695L0.535156 13.1328L0.476562 12.9766L0.4375 12.8203V12.6641L0.476562 12.5078L0.535156 12.3516L0.613281 12.2148L5.84766 7L0.671875 1.84375L0.574219 1.70703L0.496094 1.57031L0.457031 1.41406L0.4375 1.25781L0.457031 1.10156L0.496094 0.945312L0.574219 0.808594L0.671875 0.671875L0.808594 0.574219L0.945312 0.496094L1.10156 0.457031L1.25781 0.4375Z" fill="#424242" />
            </svg>
            <table title="Properties" style="width: 100%">
                <colgroup>
                    <col span="1" style="width: 50%;">
                    <col span="1" style="width: 40%;">
                    <col span="1" style="width: 10%;">
                </colgroup>
                <tr>
                    <td>
                        <div> Select Range </div>
                    </td>
                    <td>
                        <div>
                            <SfDropDownList DataSource="@RangeData" @bind-Value="@RangeValue" Width="120%">
                                <DropDownListEvents TItem="Ranges" ValueChange="RangeChange" TValue="string" />
                                <DropDownListFieldSettings Text="Name" Value="Name" />
                            </SfDropDownList>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div style="padding-top: 2px;">Range Start</div>
                    </td>
                    <td>
                        <div style="width: 95%;">
                            <input type="range" @bind-value="@RangeStartValue" min="@MinValue" max="@MaxValue" @oninput="RangeStartChange" />
                        </div>
                    </td>
                    <td style="text-align:center">
                        <div>
                            <span>@RangeStartText</span>
                        </div>
                    </td>
                </tr>

                <tr>
                    <td>
                        <div style="padding-top: 3px;">Range End</div>
                    </td>
                    <td>
                        <div style="width: 95%;">
                            <input type="range" @bind-value="@RangeEndValue" min="@MinValue" max="@MaxValue" @oninput="RangeEndChange" />
                        </div>
                    </td>
                    <td>
                        <div style="text-align:center">
                            <span>@RangeEndText</span>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div style="padding-top: 3px;">Start Width</div>
                    </td>
                    <td>
                        <div style="width: 95%;">
                            <input type="range" value="@RangeStartWidthValue" min="0" max="30" @oninput="StartWidthChange" />
                        </div>
                    </td>
                    <td>
                        <div style="text-align:center">
                            <span>@StartWidthText</span>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div style="padding-top: 2px;">End Width</div>
                    </td>
                    <td>
                        <div style="width: 95%;">
                            <input type="range" value="@RangeEndWidthValue" min="0" max="30" @oninput="EndWidthChange" />
                        </div>
                    </td>
                    <td style="text-align:center">
                        <div>
                            <span>@EndWidthText</span>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div style="padding-top: 2px;">Corner Radius</div>
                    </td>
                    <td>
                        <div style="width: 95%;">
                            <input type="range" value="@RangeCornerRadiusValue" min="0" max="12" @oninput="CornerRadiusChange" />
                        </div>
                    </td>
                    <td style="text-align:center">
                        <div>
                            <span>@CornerRadiusText</span>
                        </div>
                    </td>
                </tr>
            </table>
        </div>
    </div>
</div>

@code {
    public Theme Theme { get; set; }
    public double MinValue = 0;
    public double MaxValue = 40;
    public double LowRangeStart = 0;
    public double LowRangeEnd = 40;
    public string LowRangeStartWidth = "10";
    public string LowRangeEndWidth = "10";
    public double LowRangeCornerRadius = 0;
    public double MediumRangeStart = 40;
    public double MediumRangeEnd = 80;
    public string MediumRangeStartWidth = "10";
    public string MediumRangeEndWidth = "10";
    public double MediumRangeCornerRadius = 0;
    public double HighRangeStart = 80;
    public double HighRangeEnd = 120;
    public string HighRangeStartWidth = "10";
    public string HighRangeEndWidth = "10";
    public double HighRangeCornerRadius = 0;
    public string RangeValue = "Low";
    public double RangeStartValue = 0;
    public double RangeEndValue = 40;
    public string RangeStartWidthValue = "10";
    public string RangeEndWidthValue = "10";
    public double SliderRangeStartWidthValue = 10;
    public double SliderRangeEndWidthValue = 10;
    public double RangeCornerRadiusValue = 0;
    public double RangeStartText = 0;
    public double RangeEndText = 40;
    public string StartWidthText = "10";
    public string EndWidthText = "10";
    public double CornerRadiusText = 0;
    public bool GaugeAnimation = true;
    //Hidden:Lines
    private string canonicalURL { get; set; }
    //End:Hidden

    public List<Ranges> RangeData = new List<Ranges> {
        new Ranges{ Name = "Low"},
        new Ranges{ Name = "Medium"},
        new Ranges{ Name = "High"},
    };

    private void RangeChange(Syncfusion.Blazor.DropDowns.ChangeEventArgs<string, Ranges> args)
    {
        RangeValue = (args.Value).ToString();
        if (RangeValue == "Low")
        {
            MinValue = 0;
            MaxValue = 40;
            RangeStartValue = RangeStartText = LowRangeStart;
            RangeEndValue = RangeEndText = LowRangeEnd;
            SliderRangeStartWidthValue = Convert.ToDouble(LowRangeStartWidth);
            RangeStartWidthValue = StartWidthText = LowRangeStartWidth;
            SliderRangeEndWidthValue = Convert.ToDouble(LowRangeEndWidth);
            RangeEndWidthValue = EndWidthText = LowRangeEndWidth;
            RangeCornerRadiusValue = CornerRadiusText = LowRangeCornerRadius;
        }
        else if (RangeValue == "Medium")
        {
            MinValue = 40;
            MaxValue = 80;
            RangeStartValue = RangeStartText = MediumRangeStart;
            RangeEndValue = RangeEndText = MediumRangeEnd;
            SliderRangeStartWidthValue = Convert.ToDouble(MediumRangeStartWidth);
            RangeStartWidthValue = StartWidthText = MediumRangeStartWidth;
            SliderRangeEndWidthValue = Convert.ToDouble(MediumRangeEndWidth);
            RangeEndWidthValue = EndWidthText = MediumRangeEndWidth;
            RangeCornerRadiusValue = CornerRadiusText = MediumRangeCornerRadius;
        }
        else
        {
            MinValue = 80;
            MaxValue = 120;
            RangeStartValue = RangeStartText = HighRangeStart;
            RangeEndValue = RangeEndText = HighRangeEnd;
            SliderRangeStartWidthValue = Convert.ToDouble(HighRangeStartWidth);
            RangeStartWidthValue = StartWidthText = HighRangeStartWidth;
            SliderRangeEndWidthValue = Convert.ToDouble(HighRangeEndWidth);
            RangeEndWidthValue = EndWidthText = HighRangeEndWidth;
            RangeCornerRadiusValue = CornerRadiusText = HighRangeCornerRadius;
        }
        GaugeAnimation = false;
    }

    private void RangeStartChange(ChangeEventArgs args)
    {
        RangeStartValue = Convert.ToDouble(args.Value);
        if (RangeValue == "Low")
        {
            LowRangeStart = RangeStartValue;
        }
        else if (RangeValue == "Medium") { MediumRangeStart = RangeStartValue; }
        else { HighRangeStart = RangeStartValue; }
        RangeStartText = RangeStartValue;
    }

    private void RangeEndChange(ChangeEventArgs args)
    {
        RangeEndValue = Convert.ToDouble(args.Value);
        if (RangeValue == "Low") { LowRangeEnd = RangeEndValue; }
        else if (RangeValue == "Medium") { MediumRangeEnd = RangeEndValue; }
        else { HighRangeEnd = RangeEndValue; }
        RangeEndText = RangeEndValue;
    }

    private void StartWidthChange(ChangeEventArgs args)
    {
        SliderRangeStartWidthValue = Convert.ToDouble(args.Value);
        RangeStartWidthValue = (Convert.ToDouble(args.Value)).ToString();
        if (RangeValue == "Low") { LowRangeStartWidth = RangeStartWidthValue; }
        else if (RangeValue == "Medium") { MediumRangeStartWidth = RangeStartWidthValue; }
        else { HighRangeStartWidth = RangeStartWidthValue; }
        StartWidthText = RangeStartWidthValue;
    }

    private void EndWidthChange(ChangeEventArgs args)
    {
        SliderRangeEndWidthValue = Convert.ToDouble(args.Value);
        RangeEndWidthValue = (Convert.ToDouble(args.Value)).ToString();
        if (RangeValue == "Low") { LowRangeEndWidth = RangeEndWidthValue; }
        else if (RangeValue == "Medium") { MediumRangeEndWidth = RangeEndWidthValue; }
        else { HighRangeEndWidth = RangeEndWidthValue; }
        EndWidthText = RangeEndWidthValue;
    }

    private void CornerRadiusChange(ChangeEventArgs args)
    {
        RangeCornerRadiusValue = Convert.ToDouble(args.Value);
        if (RangeValue == "Low") { LowRangeCornerRadius = RangeCornerRadiusValue; }
        else if (RangeValue == "Medium") { MediumRangeCornerRadius = RangeCornerRadiusValue; }
        else { HighRangeCornerRadius = RangeCornerRadiusValue; }
        CornerRadiusText = RangeCornerRadiusValue;
    }

    protected override void OnInitialized()
    {
        //Hidden:Lines
        canonicalURL = NavigationManager.Uri.Split("?")[0];
        //End:Hidden
        Theme = ThemeHelper.GetCurrentTheme(NavigationManager.Uri);
    }

    public class Ranges
    {
        public string Name { get; set; }
    }
}