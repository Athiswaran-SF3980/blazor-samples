@page "/powerpoint/slide"
@inject Microsoft.JSInterop.IJSRuntime JS
@using System.IO
@using Syncfusion.Blazor.Buttons
@inject HttpClient Http
@using Blazor_MAUI_Demos.Pages.DocumentProcessing.PowerPoint
@using Blazor_MAUI_Demos.Services
@*Hidden:Lines*@
@inherits SampleBaseComponent
@inject NavigationManager NavigationManager


@*End:Hidden*@

<SampleDescription>
    <p style="font-size:16px">This sample demonstrates how to create slides with simple text, table and image in a PowerPoint presentation.</p>
</SampleDescription>
<ActionDescription>
   <b style="font-size:16px">Features:</b>
    <br />
    <ul style="font-size:16px">
			<li>Support for 9 pre-defined slide layouts while creating new slides.</li>
            <li>Add, rearrange, duplicate, and delete slides in PowerPoint presentation.</li>
            <li>Slides can be copied and pasted to the same or different PowerPoint presentation.</li>
            <li>Slides can be formatted with variety of formatting options equivalent to Microsoft PowerPoint.</li>
    </ul>
    <br />
</ActionDescription>

<div class="control-section">
    <p style="font-size:16px">Click the button to view a PowerPoint presentation generated by Essential Presentation. Please note that Microsoft PowerPoint viewer or its equivalent is required to view the resultant document.</p>

    <div class="button-section">
        <div id="button-control">
            <div class="row">
                <div>
                    <SfButton @onclick="CreateSlide">Create Presentation</SfButton>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .control-section .row {
        margin: 10px 0;
    }
</style>

@code {
    MemoryStream documentStream;
    //Hidden:Lines
    
    Dictionary<string, MemoryStream> fileData = new Dictionary<string, MemoryStream>();
    
    //End:Hidden

    /// <summary>
    /// Create and download the Presentation document
    /// </summary>
    public async Task CreateSlide(MouseEventArgs args)
    {
        await LoadTemplate();
        SlideService slideSample = new SlideService(fileData);
        documentStream = slideSample.CreateNewSlide();
        slideSample.Close();
        documentStream.Position = 0;
        SaveService saveService = new();
        saveService.SaveAndView("Slide.pptx", "application/vnd.openxmlformats-officedocument.presentationml.presentation", documentStream);
    }
    /// <summary>
    /// Load the template document
    /// </summary>
    public async Task LoadTemplate()
    {
        if (fileData != null && fileData.Count == 0)
        {
            MemoryStream memoryStream;
            string basePath = "Blazor_MAUI_Demos.wwwroot.data.powerpoint.slides.pptx";
            Stream DocumentStream = this.GetType().Assembly.GetManifestResourceStream(basePath);
            memoryStream = new MemoryStream();
            DocumentStream.CopyTo(memoryStream);
            memoryStream.Position = 0;
            fileData.Add("slides.pptx", new MemoryStream(memoryStream.ToArray()));
            basePath = "Blazor_MAUI_Demos.wwwroot.images.powerpoint.tablet.png";
            DocumentStream = this.GetType().Assembly.GetManifestResourceStream(basePath);
            memoryStream = new MemoryStream();
            DocumentStream.CopyTo(memoryStream);
            memoryStream.Position = 0;
            fileData.Add("tablet.png", new MemoryStream(memoryStream.ToArray()));
            DocumentStream.Dispose();
        }
    }
}