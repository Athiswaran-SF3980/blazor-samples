@page "/excel/form-controls"
@inject HttpClient Http
@using System.IO;

@using Blazor_MAUI_Demos.Services
@using Syncfusion.Blazor.Buttons
@*Hidden:Lines*@

@using Blazor_MAUI_Demos.Pages.DocumentProcessing.Excel

@*End:Hidden*@
@*Hidden:Lines*@
@inherits SampleBaseComponent
@inject NavigationManager NavigationManager


@*End:Hidden*@

<SampleDescription>
    <p>This sample demonstrates how to use form controls in spreadsheet using XlsIO.</p>
</SampleDescription>
<ActionDescription>
    <p>Essential XlsIO can read and write form controls such as text boxes, check boxes, combo boxes and option buttons.</p>
    <p style='display: block'><b>Features:</b></p>
    <ul>
        <li>Creating rich reports with text boxes, check boxes, and combo boxes using XlsIO</li>
        <li>Text box formatting</li>
        <li>Check boxes with Cell Link</li>
        <li>Combo boxes with formatting</li>
        <li>Option button with formatting</li>
    </ul>
</ActionDescription>

<div class="control-section">
    <p style="font-weight:normal">Click the button to view an Excel spreadsheet generated by Essential XlsIO. Please note that Microsoft Excel Viewer or Microsoft Excel is required to view the resultant document.</p>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    <div class="radio-control">
        <label style="font-weight:bold">Save As:</label>
        <SfRadioButton Label="XLS" Name="XLS" Value=@("XLS") @bind-Checked="@excelVersion"></SfRadioButton>
        <SfRadioButton Label="XLSX" Name="XLSX" Value=@("XLSX") @bind-Checked="@excelVersion"></SfRadioButton>
    </div>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    <div class="button-section">
        <div id="button-control">
            <div class="row">
                <div>
                    <SfButton @onclick="FormControlsXlsIO">Create Document</SfButton>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .control-section .row {
        margin: 10px 0;
    }
</style>

@code {
    MemoryStream excelStream;
    string excelVersion = "XLSX";
    //Hidden:Lines


    Dictionary<string, MemoryStream> fileData = new Dictionary<string, MemoryStream>();


    //End:Hidden

    /// <summary>
    /// Create and download the Excel document with form controls
    /// </summary>
    public async void FormControlsXlsIO(MouseEventArgs args)
    {
        string fileDataPath = "Blazor_MAUI_Demos.wwwroot.images.xlsio.contact-sales.gif";
        Stream DocumentStream = this.GetType().Assembly.GetManifestResourceStream(fileDataPath);
        MemoryStream memoryStream = new MemoryStream();
        DocumentStream.CopyTo(memoryStream);
        memoryStream.Position = 0;
        fileData.Add("contact-sales.gif", memoryStream);
        FormControlsService service = new FormControlsService(fileData);
        excelStream = service.FormControlsXlsIO(excelVersion);
        service.Close();
        excelStream.Position = 0;
        SaveService saveService = new SaveService();
        if (excelVersion == "XLSX")
        {
            saveService.SaveAndView("Sample.xlsx", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelStream);
        }
        else
        {
            saveService.SaveAndView("Sample.xls", "application/vnd.ms-excel", excelStream);
        }
    }
}