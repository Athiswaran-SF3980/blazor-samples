@page "/excel/format-cells"
@inject HttpClient Http
@using System.IO;

@using Blazor_MAUI_Demos.Services
@using Syncfusion.Blazor.Buttons
@*Hidden:Lines*@

@using Blazor_MAUI_Demos.Pages.DocumentProcessing.Excel

@*End:Hidden*@
@*Hidden:Lines*@
@inherits SampleBaseComponent
@inject NavigationManager NavigationManager

@*End:Hidden*@

<SampleDescription>
    <p>This sample demonstrates how to apply formatting to the cells using XlsIO.</p>
</SampleDescription>
<ActionDescription>
    <p>Formatting worksheets makes them more attractive and easier to use. Excel provides various options for setting font, font size, color, and background. The Format Cells dialog in Excel has six tabs, each with several characteristics that allow you to set various formats for a cell. You can set number formats, horizontal and vertical alignment, text control operations, font and font styles, and borders for the cells.</p>
    <p style='display: block'><b>Features:</b></p>
    <ul>
        <li>Various styles such as colors, font settings, borders, and alignments</li>
        <li>Number formats</li>
        <li>Patterns</li>
        <li>Conditional formatting</li>
        <li>RTF</li>
        <li>Image insertion</li>
    </ul>
</ActionDescription>

<div class="control-section">
    <p style="font-weight:normal">Click the button to view an Excel spreadsheet generated by Essential XlsIO. Please note that Microsoft Excel Viewer or Microsoft Excel is required to view the resultant document.</p>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    <div class="radio-control">
        <label style="font-weight:bold">Save As:</label>
        <SfRadioButton Label="XLS" Name="XLS" Value=@("XLS") @bind-Checked="@excelVersion"></SfRadioButton>
        <SfRadioButton Label="XLSX" Name="XLSX" Value=@("XLSX") @bind-Checked="@excelVersion"></SfRadioButton>
    </div>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    <div class="button-section">
        <div id="button-control">
            <div class="row">
                <div>
                    <SfButton @onclick="FormatCellsXlsIO">Create Document</SfButton>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .control-section .row {
        margin: 10px 0;
    }
</style>

@code {
    MemoryStream excelStream;
    string excelVersion = "XLSX";
    //Hidden:Lines


    Dictionary<string, MemoryStream> fileData = new Dictionary<string, MemoryStream>();


    //End:Hidden

    /// <summary>
    /// Create and download the Excel document with formatting applied to cells
    /// </summary>
    public async void FormatCellsXlsIO(MouseEventArgs args)
    {
        string fileDataPath = "Blazor_MAUI_Demos.wwwroot.images.xlsio.empid1.png";
        Stream DocumentStream = this.GetType().Assembly.GetManifestResourceStream(fileDataPath);
        MemoryStream memoryStream = new MemoryStream();
        DocumentStream.CopyTo(memoryStream);
        memoryStream.Position = 0;
        fileData.Add("empid1.png", memoryStream);
        FormatCellsService service = new FormatCellsService(fileData);
        excelStream = service.FormatCellsXlsIO(excelVersion);
        service.Close();
        excelStream.Position = 0;
        SaveService saveService = new SaveService();
        if (excelVersion == "XLSX")
        {
            saveService.SaveAndView("Sample.xlsx", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelStream);
        }
        else
        {
            saveService.SaveAndView("Sample.xls", "application/vnd.ms-excel", excelStream);
        }
    }
}
