@page "/excel/import-html-table"
@inject HttpClient Http
@using System.IO;

@using Blazor_MAUI_Demos.Services
@using Syncfusion.Blazor.Buttons
@*Hidden:Lines*@
@using Blazor_MAUI_Demos.Pages.DocumentProcessing.Excel

@*End:Hidden*@
@*Hidden:Lines*@
@inherits SampleBaseComponent
@inject NavigationManager NavigationManager


@*End:Hidden*@

<SampleDescription>
    <p>This sample demonstrates how to import HTML table to worksheet using Essential XlsIO.</p>
</SampleDescription>
<ActionDescription>
    <p>Essential XlsIO supports importing HTML tables into Excel worksheets. The ImportHtmlTable method loads an HTML file and imports all the tables in the file to the worksheet.</p>
    <p style='display: block'><b>Features:</b></p>
    <p style='display: block'>This sample demonstrates following features:</p>
    <ul>
        <li>Imports HTML table</li>
        <li>Imports with table formatting</li>
    </ul>
</ActionDescription>

<div class="control-section">
    <p style="font-weight:normal">Click the “Input Template” button to view the input HTML document. </p>
    <p style="font-weight:normal">Click the “Import” button to view the output Excel document. Please note that the Microsoft Excel viewer or Microsoft Excel is required to view the Excel document</p>

    <div class="checkbox-control">
        <div class="row">
            <SfCheckBox @bind-Checked=detectFormula Label="Import with Formula" TChecked="bool"></SfCheckBox>
        </div>
    </div>
    <div class="button-section">
        <div id="button-control">
            <div class="row">
                <div>
                    <SfButton @onclick="InputTemplate">Input Template</SfButton>&nbsp;
                    <SfButton @onclick="Convert">Import</SfButton>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .control-section .row {
        margin: 10px 0;
    }
</style>

@code {
    MemoryStream excelStream;
    string button = string.Empty;
    bool detectFormula = false;
    //Hidden:Lines


    Dictionary<string, MemoryStream> fileData = new Dictionary<string, MemoryStream>();


    //End:Hidden

    /// <summary>
    /// Convert the HTML document to Excel
    /// </summary>
    public async void Convert(MouseEventArgs args)
    {
        LoadTemplate("html-with-formula-to-excel.html");
        LoadTemplate("html-to-excel.html");
        ImportHTMLTableService service = new ImportHTMLTableService(fileData);
        button = "Convert";
        excelStream = service.ImportHTMLTableXlsIO(button, detectFormula);
        service.Close();
        excelStream.Position = 0;
        SaveService saveService = new SaveService();
        if (detectFormula)
        {
            saveService.SaveAndView("Import-HTML-Table-with-Formula.xlsx", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelStream);
        }
        else
        {
            saveService.SaveAndView("Import-HTML-Table.xlsx", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelStream);
        }
    }
    /// <summary>
    /// Download the HTML document used for conversion
    /// </summary>
    public async void InputTemplate(MouseEventArgs args)
    {
        LoadTemplate("html-with-formula-to-excel.html");
        LoadTemplate("html-to-excel.html");
        ImportHTMLTableService service = new ImportHTMLTableService(fileData);
        button = "Input Template";
        excelStream = service.ImportHTMLTableXlsIO(button, detectFormula);
        excelStream.Position = 0;
        MemoryStream memoryStream = new MemoryStream();
        excelStream.CopyTo(memoryStream);
        memoryStream.Position = 0;
        service.Close();
        SaveService saveService = new SaveService();
        if (detectFormula)
        {
            saveService.SaveAndView("Import-HTML-Table-with-Formula.html", "text/html", memoryStream);
        }
        else
        {
            saveService.SaveAndView("Import-HTML-Table.html", "text/html", memoryStream);
        }
    }
    /// <summary>
    /// Load the template document
    /// </summary>
    public async void LoadTemplate(string fileName)
    {

        string fileDataPath = "Blazor_MAUI_Demos.wwwroot.data.xlsio.";
        Stream DocumentStream = this.GetType().Assembly.GetManifestResourceStream(fileDataPath + fileName);
        MemoryStream memoryStream = new MemoryStream();
        DocumentStream.CopyTo(memoryStream);
        memoryStream.Position = 0;
        fileData.Add(fileName, memoryStream);
        DocumentStream.Dispose();

    }
}
