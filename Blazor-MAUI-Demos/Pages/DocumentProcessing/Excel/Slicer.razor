@page "/excel/slicer"
@inject HttpClient Http
@using System.IO;

@using Blazor_MAUI_Demos.Services
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.DropDowns
@*Hidden:Lines*@

@using Blazor_MAUI_Demos.Pages.DocumentProcessing.Excel
@*End:Hidden*@
@*Hidden:Lines*@
@inherits SampleBaseComponent
@inject NavigationManager NavigationManager


@*End:Hidden*@

<SampleDescription>
    <p>This sample shows how to create and use slicers in table.</p>
</SampleDescription>
<ActionDescription>
    <p>Slicers are UI filters that help to display only specific data based on the selection criteria. It provides easy and simple UI options to enable/disable the filters in a table.</p>
    <p style='display: block'><b>Features:</b></p>
    <ul>
        <li>Create slicers and filter table data.</li>
        <li>Format slicer with built-in styles.</li>
    </ul>
</ActionDescription>

<div class="control-section">
    <p style="font-weight:normal">Click the "Input Template" button to view the input Excel document and click the "Create Document" button to view the output Excel document. Please note that the Microsoft Excel viewer or Microsoft Excel is required to view the Excel document.</p>
    <p style="font-weight:normal">Choose the columns to create slicers.</p>
    <div class="dropdown-control">
        <table>
            <tr>
                <td>
                    <h5 class="row" style="font-size:14px">Select Column</h5>
                </td>
                <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>
                <td>
                    <div class="drop-control" style="margin-left:4px; width:130px">
                        <SfDropDownList TItem="string" TValue="string" PopupHeight="100px" Placeholder="Requester" @bind-Value="@DropVal1" DataSource="@Columns">
                        </SfDropDownList>
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <br />
                    <h5 class="row" style="font-size:14px">Select Column</h5>
                </td>
                <td><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>
                <td>
                    <br />
                    <div class="drop-control" style="margin-left:4px; width:130px">
                        <SfDropDownList TItem="string" TValue="string" PopupHeight="100px" Placeholder="Status" @bind-Value="@DropVal2" DataSource="@Columns">
                        </SfDropDownList>
                    </div>
                </td>
            </tr>
        </table>
    </div>
    <table>
        <tr>
            <td colspan="4">
                <br />
                <div class="button-section">
                    <div id="button-control">
                        <div class="row">
                            <div>
                                <SfButton @onclick="InputTemplate">Input Template</SfButton>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                <SfButton @onclick="CreateDocument">Create Document</SfButton>
                            </div>
                        </div>
                    </div>
                </div>
            </td>
        </tr>
    </table>

</div>

<style>
    .control-section .row {
        margin: 10px 0;
    }
</style>

@code {
    MemoryStream excelStream;
    string button = string.Empty;

    public string DropVal1 { get; set; }
    public string DropVal2 { get; set; }

    private List<string> Columns = new List<string>() { "Requester", "Assignee", "Status" };

    //Hidden:Lines


    Dictionary<string, MemoryStream> fileData = new Dictionary<string, MemoryStream>();


    //End:Hidden

    /// <summary>
    /// Download the Excel document
    /// </summary>
    public async void CreateDocument(MouseEventArgs args)
    {
        LoadTemplate();
        SlicerService service = new SlicerService(fileData);
        button = "Create Document";
        excelStream = service.SlicerXlsIO(button, DropVal1, DropVal2);
        service.Close();
        excelStream.Position = 0;
        SaveService saveService = new SaveService();
        saveService.SaveAndView("Table Slicer.xlsx", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelStream);
    }
    /// <summary>
    /// Download the Excel document
    /// </summary>
    public async void InputTemplate(MouseEventArgs args)
    {
        LoadTemplate();
        SlicerService service = new SlicerService(fileData);
        button = "Input Template";
        excelStream = service.SlicerXlsIO(button, DropVal1, DropVal2);
        service.Close();
        excelStream.Position = 0;
        SaveService saveService = new SaveService();
        saveService.SaveAndView("Input Template.xlsx", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelStream);
    }
    /// <summary>
    /// Load the template document
    /// </summary>
    public async void LoadTemplate()
    {
        string basePath = "Blazor_MAUI_Demos.wwwroot.data.xlsio.table-slicer.xlsx";
        Stream DocumentStream = this.GetType().Assembly.GetManifestResourceStream(basePath);
        MemoryStream memoryStream = new MemoryStream();
        DocumentStream.CopyTo(memoryStream);
        memoryStream.Position = 0;
        fileData.Add("table-slicer.xlsx", memoryStream);
        DocumentStream.Dispose();
    }

}
