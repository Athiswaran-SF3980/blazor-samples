@page "/excel/pivottable"
@inject HttpClient Http
@using System.IO;

@using Blazor_MAUI_Demos.Services
@using Syncfusion.Blazor.Buttons
@*Hidden:Lines*@

@using Blazor_MAUI_Demos.Pages.DocumentProcessing.Excel

@*End:Hidden*@
@*Hidden:Lines*@
@inherits SampleBaseComponent
@inject NavigationManager NavigationManager


@*End:Hidden*@

<SampleDescription>
    <p>This sample demonstrates how to use PivotTable in spreadsheets using XlsIO.</p>
</SampleDescription>
<ActionDescription>
    <p>When there is a need to summarize large reports, Excel allows you to summarize data through pivot table insertion. Microsoft Excel supplies various built-in styles for pivot tables, allowing the creation of pivot tables with rich formats and more flexibility in summarizing reports.</p>
    <p style='display: block'><b>Features:</b></p>
    <ul>
        <li>Creating pivot tables from template data</li>
        <li>Customizing pivot tables with various properties</li>
        <li>Formatting pivot tables with built-in styles</li>
    </ul>
</ActionDescription>

<div class="control-section">
    <p style="font-weight:normal">Click the "Create Document" button to view the created Excel document and click the "Customize Pivot Table" button to view the Excel document created with customized pivot table. Please note that the Microsoft Excel viewer or Microsoft Excel is required to view the Excel document.</p>
    <br />
    <div class="PageFilter-control">
        <label style="font-weight:normal">
            Page Filter :
        </label>
        <SfCheckBox @bind-Checked=PageFilter ValueChange="UncheckMultiplePageFilter" Label="Page Filter" TChecked="bool"></SfCheckBox>
        <SfCheckBox @bind-Checked=MultiplePageFilter ValueChange="UncheckPageFilter" Label="Multiple Page Filter" TChecked="bool"></SfCheckBox>
    </div>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    <div class="RowandColumnFilter-control">
        <label style="font-weight:normal">
            Row and Column Filter :
        </label>
        <SfCheckBox @bind-Checked=RowFilter Label="Row Filter" TChecked="bool"></SfCheckBox>
        <SfCheckBox @bind-Checked=ColumnFilter Label="Column Filter" TChecked="bool"></SfCheckBox>
    </div>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    <div class="Grouping-control">
        <SfCheckBox @bind-Checked=ApplyGrouping Label="Apply Grouping" TChecked="bool"></SfCheckBox>
    </div>
    <br />
    <div class="celldiv">
        <SfButton @onclick="Createdocument">Create Document</SfButton>&nbsp;
        <SfButton @onclick="Customizepivottable">Customize Pivot Table</SfButton>
    </div>
</div>

<style>
    .checkbox-control {
        margin: 5% 0 2% 0;
    }

    .control-section .row {
        margin: 10px 0;
    }
</style>

@code {
    MemoryStream stream;
    string button = string.Empty;
    bool Filter = false;
    bool RowFilter = false;
    bool ColumnFilter = false;
    bool MultiplePageFilter = false;
    bool PageFilter = true;
    bool ApplyGrouping = false;

    Dictionary<string, MemoryStream> fileData = new Dictionary<string, MemoryStream>();


    //End:Hidden

    /// <summary>
    /// Download the input Excel document
    /// </summary>
    public async void Createdocument(MouseEventArgs args)
    {
        string fileDataPath = "Blazor_MAUI_Demos.wwwroot.data.xlsio.pivot-code-date.xlsx";
        Stream DocumentStream = this.GetType().Assembly.GetManifestResourceStream(fileDataPath);
        MemoryStream memoryStream = new MemoryStream();
        DocumentStream.CopyTo(memoryStream);
        memoryStream.Position = 0;
        fileData.Add("pivot-code-date.xlsx", memoryStream);
        DocumentStream.Dispose();
        PivotTableService service = new PivotTableService(fileData);
        button = "CreateDocument";
        stream = service.PivotTableXlsIO(button, RowFilter, ColumnFilter, MultiplePageFilter, PageFilter, ApplyGrouping);
        service.Close();
        stream.Position = 0;
        SaveService saveService = new SaveService();
        saveService.SaveAndView("PivotTable.xlsx", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", stream);
    }

    /// <summary>
    /// Download the JSON document
    /// </summary>
    public async void Customizepivottable(MouseEventArgs args)
    {
        string fileDataPath = "Blazor_MAUI_Demos.wwwroot.data.xlsio.pivot-table.xlsx";
        Stream DocumentStream = this.GetType().Assembly.GetManifestResourceStream(fileDataPath);
        MemoryStream memoryStream = new MemoryStream();
        DocumentStream.CopyTo(memoryStream);
        memoryStream.Position = 0;
        fileData.Add("pivot-table.xlsx", memoryStream);
        DocumentStream.Dispose();
        PivotTableService service = new PivotTableService(fileData);
        button = "CustomizePivotTable";
        stream = service.PivotTableXlsIO(button, RowFilter, ColumnFilter, MultiplePageFilter, PageFilter, ApplyGrouping);
        service.Close();
        stream.Position = 0;
        SaveService saveService = new SaveService();
        saveService.SaveAndView("PivotTable.xlsx", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", stream);
    }

    private void UncheckPageFilter()
    {
        PageFilter = false;
    }
    private void UncheckMultiplePageFilter()
    {
        MultiplePageFilter = false;
    }

}