@page "/pdf/overlay-documents"
@using System.IO
@using Syncfusion.Blazor.Buttons
@*Hidden:Lines*@
@inherits SampleBaseComponent

@using Blazor_MAUI_Demos 
@using Blazor_MAUI_Demos.Services

@*End:Hidden*@
@*Hidden:Lines*@
@inject NavigationManager NavigationManager


@*End:Hidden*@

<SampleDescription>
    <p style="font-size:16px">This sample demonstrates how to overlay two different PDF documents into a single PDF document.</p>
</SampleDescription>
<ActionDescription>
  <p style="font-size:16px">This feature can be used to draw template pages from one document into another for easy designing.</p>
</ActionDescription>

<div class="control-section">
    <p style="font-size:16px">Click the button to view a PDF document generated by Essential PDF. Please note that Adobe Reader or its equivalent is required to view the resultant document. </p>
   
    <div class="button-section">
        <div id="button-control">
            <div class="row">
                <div>
                    <SfButton @onclick="GeneratePDF">Generate PDF</SfButton>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .radio-control {
        margin: 0 0 5% 0;
    }    

    .control-section .row {
        margin: 10px 0;
    }
</style>

@code {
    
    
    /// <summary>
    /// Create and download the simple PDF document
    /// </summary>
    public async void GeneratePDF(MouseEventArgs args)
    {	 
        Dictionary<string, MemoryStream> fileData = new Dictionary<string, MemoryStream>();
        fileData.Add("border-template.pdf", await ReadData("wwwroot/data/pdf/border-template.pdf"));
        fileData.Add("source-template.pdf", await ReadData("wwwroot/data/pdf/source-template.pdf"));
        OverlayDocumentsService service = new OverlayDocumentsService(fileData);
        MemoryStream documentStream = service.CreatePdfDocument();
        service.Close();
		SaveService saveService = new SaveService();
        saveService.SaveAndView("OverlayDocuments.pdf", "application/pdf", documentStream);
    }
    private async Task<MemoryStream> ReadData(string fileName)
    {
        using var stream = await FileSystem.OpenAppPackageFileAsync(fileName);
        MemoryStream memoryStream = new MemoryStream();
        await stream.CopyToAsync(memoryStream);
        memoryStream.Position = 0;
        return memoryStream;
    }
}