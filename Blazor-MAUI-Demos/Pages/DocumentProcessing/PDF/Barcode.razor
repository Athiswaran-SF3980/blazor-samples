@page "/pdf/barcode"
@using System.IO
@using Syncfusion.Blazor.Buttons
@*Hidden:Lines*@
@inherits SampleBaseComponent

@using Blazor_MAUI_Demos 
@using Blazor_MAUI_Demos.Services

@*End:Hidden*@
@*Hidden:Lines*@
@inject NavigationManager NavigationManager


@*End:Hidden*@

<SampleDescription>
    <p style="font-size:16px">This sample demonstrates the creation of barcode in the PDF document and does not requires barcode font for creating barcode. It supports both 1D and 2D barcode with many customizing properties.</p>  
</SampleDescription>
<ActionDescription>
    <p style="font-size:16px">This feature can be used in invoice, super markets, health care systems and more. More information about the barcode can be found in this documentation <a target='_blank' href='https://help.syncfusion.com/file-formats/pdf/working-with-barcode' aria-label="documentation section">section.</a></p>
</ActionDescription>

<div class="control-section">
    <p style="font-size:16px">Click the button to view a PDF document generated by Essential PDF. Please note that Adobe Reader or its equivalent is required to view the resultant document. </p>

    <div class="button-section">
        <div id="button-control">
            <div class="row">
                <div>
                    <SfButton @onclick="GeneratePDF">Draw Barcode</SfButton>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .radio-control {
    margin: 0 0 5% 0;
    }

    .control-section .row {
    margin: 10px 0;
    }
</style>

@code {



    /// <summary>
    /// Create and download the simple PDF document
    ///<summary>
    protected async void GeneratePDF(MouseEventArgs args)
    {

        Dictionary<string, MemoryStream> fileData = new Dictionary<string, MemoryStream>();
        string fileDataPath = NavigationManager.BaseUri + SampleService.WebAssetsPath;
        fileData.Add("qrcodelogo.png", await ReadData());
        BarcodeService service = new BarcodeService(fileData);
        MemoryStream documentStream = service.CreateBarcode();
        service.Close();
        SaveService saveService = new SaveService();
        saveService.SaveAndView("Barcode.pdf", "application/pdf", documentStream);
    }
    private async Task<MemoryStream> ReadData()
    {
        using var stream = await FileSystem.OpenAppPackageFileAsync("wwwroot/images/pdf/qrcodelogo.png");
        MemoryStream memoryStream = new MemoryStream();
        await stream.CopyToAsync(memoryStream);
        memoryStream.Position = 0;
        return memoryStream;
    }
}
