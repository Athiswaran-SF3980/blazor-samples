@page "/word/word-to-odt"
@inject Microsoft.JSInterop.IJSRuntime JS
@using System.IO
@using Syncfusion.Blazor.Buttons
@using Blazor_MAUI_Demos.Pages.DocumentProcessing.Word
@using Blazor_MAUI_Demos.Services
@inject HttpClient Http
@*Hidden:Lines*@
@inherits SampleBaseComponent
@inject NavigationManager NavigationManager


@*End:Hidden*@

<SampleDescription>
   <p style="font-size:16px">This sample demonstrates how to convert the Word document to ODT using Essential DocIO.</p> 
</SampleDescription>
<ActionDescription>
   <p style="font-size:16px">DocIO provides support to convert the Word document to Open Document Text format.</p><p style="font-size:16px">More information about ODT conversion can be found in this <a href="https://help.syncfusion.com/file-formats/docio/word-to-odt" aria-label="documentation section">documentation</a> section.</p>
</ActionDescription>

<div class="control-section">
    <p style="font-size:16px">Click the button to view the resultant ODT document generated by Essential DocIO.</p>
    <div class="button-section">
        <div id="button-control">
            <div class="row">
                <div>
                    <SfButton @onclick="ViewTemplate">View Template</SfButton>&nbsp;
                    <SfButton @onclick="ConvertToODT">Convert to ODT</SfButton>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .control-section .row {
        margin: 10px 0;
    }
</style>

@code {
    MemoryStream documentStream;
    //Hidden:Lines
    
    Dictionary<string, MemoryStream> fileData = new Dictionary<string, MemoryStream>();
    
    //End:Hidden

    /// <summary>
    /// Create and download the simple Word document
    /// </summary>
    public async Task ConvertToODT(MouseEventArgs args)
    {
        await LoadTemplate();
        WordToODTService service = new WordToODTService(fileData);
        documentStream = service.WordToODT("Generate Document");
        service.Close();		
        documentStream.Position = 0;
        SaveService saveService = new();
		saveService.SaveAndView("WordToODT.odt", "application/msword", documentStream);
    }
    /// <summary>
    /// Create and download the template Word document
    /// </summary>
    public async Task ViewTemplate(MouseEventArgs args)
    {
        await LoadTemplate();
        WordToODTService service = new WordToODTService(fileData);
        documentStream = service.WordToODT("View Template");
        documentStream.Position = 0;
        SaveService saveService = new();
		saveService.SaveAndView("Word to ODT.docx", "application/msword", documentStream);
        service.Close();
    }
    /// <summary>
    /// Load the template document
    /// </summary>
    public async Task LoadTemplate()
    {
        if (fileData != null && fileData.Count == 0)
        {
            string basePath = "Blazor_MAUI_Demos.wwwroot.data.word.word-to-odt.docx";
            Stream DocumentStream = this.GetType().Assembly.GetManifestResourceStream(basePath);
            MemoryStream memoryStream = new MemoryStream();
            DocumentStream.CopyTo(memoryStream);
            memoryStream.Position = 0;
            fileData.Add("word-to-odt.docx", memoryStream);
            DocumentStream.Dispose();
        }
    }
}