@page "/word/word-to-wordml"
@inject Microsoft.JSInterop.IJSRuntime JS
@using System.IO
@using Syncfusion.Blazor.Buttons
@using Blazor_MAUI_Demos.Pages.DocumentProcessing.Word
@using Blazor_MAUI_Demos.Services
@inject HttpClient Http
@*Hidden:Lines*@
@inherits SampleBaseComponent
@inject NavigationManager NavigationManager


@*End:Hidden*@

<SampleDescription>
    <p style="font-size:16px">This sample demonstrates how to convert the Word document to Word processing XML using Essential DocIO.</p>
</SampleDescription>
<ActionDescription>
 <p style="font-size:16px">DocIO provides support to convert the Word document to Word processing XML document and vice versa.</p>
 <p style="font-size:16px">More information about WordML conversion can be found on this  <a href="https://help.syncfusion.com/file-formats/docio/word-file-formats#word-processing-xml-xml" aria-label="documentation section">documentation</a> section.</p>
</ActionDescription>

<div class="control-section">
    <p style="font-size:16px">Click the button to view the resultant WordML document generated by Essential DocIO.</p>
    <div class="button-section">
        <div id="button-control">
            <div class="row">
                <div>
                    <SfButton @onclick="ViewTemplate">View Template</SfButton>&nbsp;
                    <SfButton @onclick="ConvertToWordML">Convert to WordML</SfButton>
                </div>
            </div>
        </div>
    </div>
</div>


<style>
    .control-section .row {
        margin: 10px 0;
    }
</style>

@code {
    MemoryStream documentStream;
    //Hidden:Lines
    
    Dictionary<string, MemoryStream> fileData = new Dictionary<string, MemoryStream>();
    
    //End:Hidden

    /// <summary>
    /// Convert the Word document to Word processing XML
    /// </summary>
    public async Task ConvertToWordML(MouseEventArgs args)
    {
        await LoadTemplate(); 
        WordToWordMLService service = new WordToWordMLService(fileData);
        documentStream = service.WordToWordML("ConvertToWordML");
        service.Close();		
        documentStream.Position = 0;
        SaveService saveService = new();
		saveService.SaveAndView("WordToWordML.xml", "application/msword", documentStream);
    }
    /// <summary>
    /// Download the template Word document
    /// </summary>
    public async Task ViewTemplate(MouseEventArgs args)
    {
        await LoadTemplate();
        WordToWordMLService service = new WordToWordMLService(fileData);
        documentStream = service.WordToWordML("View Template");
        documentStream.Position = 0;
        SaveService saveService = new();
		saveService.SaveAndView("DocToWordML.doc", "application/msword", documentStream);       
        service.Close();
    }
    /// <summary>
    /// Load the template document
    /// </summary>
    public async Task LoadTemplate()
    {
        if (fileData != null && fileData.Count == 0)
        {
            string basePath = "Blazor_MAUI_Demos.wwwroot.data.word.doc-to-wordml.doc";
            Stream DocumentStream = this.GetType().Assembly.GetManifestResourceStream(basePath);
            MemoryStream memoryStream = new MemoryStream();
            DocumentStream.CopyTo(memoryStream);
            memoryStream.Position = 0;
            fileData.Add("doc-to-wordml.doc", memoryStream);
            DocumentStream.Dispose();
        }
    }
}