@page "/DateTime-Picker/MaskSupport"

@using Syncfusion.Blazor.Calendars

@*Hidden:Lines*@
@inherits SampleBaseComponent;
@inject NavigationManager NavigationManager

<PageTitle>Blazor DateTime Picker Mask Support Example - Syncfusion Demos</PageTitle>

<HeadContent>
    <meta name="description" content="This example demonstrates the Mask Support in Blazor DateTime Picker Component. Explore here for more details." />
    <link rel="canonical" href="@canonicalURL" />
</HeadContent>
@*End:Hidden*@
<SampleDescription>
   <p> In this sample demonstrates the DateTime masking functionality in the DateTimePicker. It allows you to enter a valid value for each mask pattern of the DateTime masking.</p>
</SampleDescription>
<ActionDescription>
    <p> DateTimePicker has an <b>EnableMask</b> property that allows you to enable the DateTime masking support. The mask pattern is defined based on the provided date and time format to the component. If the <a href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Calendars.DatePickerModel.html#Syncfusion_Blazor_Calendars_DatePickerModel_Format' target='_blank'> Format</a> is not specified, the mask pattern is formed based on the default format of the current culture.</p> 
</ActionDescription>

<div class="col-lg-12 control-section sb-property-border">
        <div class="control-wrapper">
            <label class="example-label">Select Date and Time</label>
            <SfDateTimePicker TValue="DateTime?" Width="auto" @bind-Value="@DateValue" EnableMask=true Format="@FormatString" StrictMode=true ShowClearButton="true" FullScreen="true">
                <DateTimePickerMaskPlaceholder Day="day" Month="month" Year="year" Hour="hour" Minute="minute" Second="second" DayOfWeek="weekday"></DateTimePickerMaskPlaceholder>
            </SfDateTimePicker>
        </div>
</div>

<style>
    .control-wrapper {
        max-width: 250px;
        margin: 0 auto;
        padding: 50px 0px 0px;
    }
    
    .example-label {
        font-size: 14px;
        margin-bottom: 6px;
    }
</style>

@code {
    public DateTime? DateValue { get; set; } = new DateTime(DateTime.Now.Year, DateTime.Now.Month, 10);
    private string textValue { get; set; }
    
    //Hidden:Lines
    private string canonicalURL { get; set; }
    protected override void OnInitialized()
    {
        canonicalURL = NavigationManager.Uri.Split("?")[0];
    }
    //End:Hidden
    public string FormatString { get; set; } = "g";
}
