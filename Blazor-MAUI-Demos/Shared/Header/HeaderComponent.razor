﻿﻿@using Syncfusion.Blazor.Buttons;

@namespace Blazor_MAUI_Demos.Shared

@inject IJSRuntime JsRuntime;
@inject NavigationManager UriHelper;
@inject SampleService SampleService;

<div id='sample-header' class="sb-header e-view" role="banner">

    <div class='sb-header-left sb-left sb-table'>
        <div class='sb-header-item sb-table-cell'>
            <div id="sb-toggle-left" @onclick="NavigateToHome" role="button" tabindex="0" class="sb-slide-nav sb-icons toggle-active" aria-label="toggle all controls navigation"
                 title='toggle leftpane'>
                <svg width="16" height="15" viewBox="0 0 14 12" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M6.17969 0.257812H6.10156L5.94531 0.296875L5.78906 0.355469L5.65234 0.433594L0.613281 5.47266L0.535156 5.60938L0.476562 5.76562L0.4375 5.92188V6.07812L0.476562 6.23438L0.535156 6.39062L0.613281 6.52734L5.65234 11.5664L5.78906 11.6445L5.94531 11.7031L6.10156 11.7422H6.25781L6.41406 11.7031L6.57031 11.6445L6.70703 11.5664L6.82422 11.4492L6.90234 11.3125L6.96094 11.1562L7 11V10.8438L6.96094 10.6875L6.90234 10.5312L6.82422 10.3945L3.23047 6.82031H12.7422L12.8984 6.80078L13.0547 6.76172L13.1914 6.68359L13.3281 6.58594L13.4258 6.44922L13.5039 6.3125L13.543 6.15625L13.5625 6L13.543 5.84375L13.5039 5.6875L13.4258 5.55078L13.3281 5.41406L13.1914 5.31641L13.0547 5.23828L12.9766 5.21875L12.8203 5.17969H3.23047L6.76562 1.66406L6.86328 1.52734L6.94141 1.39062L6.98047 1.23438L7 1.07812L6.98047 0.921875L6.94141 0.765625L6.86328 0.628906L6.76562 0.492188L6.62891 0.394531L6.49219 0.316406L6.33594 0.277344L6.17969 0.257812Z" fill="#FFFFFF" />
                </svg>
            </div>
        </div>
        <div class='sb-header-item sb-table-cell' id="sb-header-text" @onclick="HomeIconClick" style="padding-left:20px" role="button" aria-label="Navigates to Home page">
            <span>@componentName</span>
        </div>
        <div class='sb-header-item sb-table-cell git-icons' @ontouchstart="@(async () => { await ShowTooltip("git-icons"); })" @onmouseover="@(async () => { await ShowTooltip("git-icons"); })">
@{#if IOS}
            <a href='https://github.com/syncfusion/blazor-samples' @onclick="@(async ()=> await SampleService.HandleClickAsync("https://github.com/syncfusion/blazor-samples"))" target="_blank" rel="noopener">
                <svg width="18" id="github-icon" height="20" viewBox="0 0 18 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path fill-rule="evenodd" clip-rule="evenodd" d="M3.20775 1.99878C3.20739 1.99833 3.2132 1.99816 3.22628 1.99963C3.21465 1.99998 3.20811 1.99924 3.20775 1.99878ZM3.65776 2.14217C3.70049 2.16132 3.74565 2.18261 3.79316 2.20616C4.27029 2.44267 4.7852 2.80709 5.09642 3.09626L5.57644 3.54226L6.177 3.28023C7.08829 2.88263 8.13784 2.65334 9.26119 2.65334C10.3845 2.65334 11.4341 2.88263 12.3454 3.28023L12.9624 3.54943L13.444 3.0791C13.9892 2.54667 14.4462 2.31625 14.7814 2.20891C14.8657 2.1819 14.9457 2.16149 15.022 2.14607C15.0285 2.20947 15.0324 2.28355 15.0324 2.36997C15.0324 2.81179 14.928 3.44791 14.673 4.33555L14.5374 4.80749L14.8279 5.20335C15.3883 5.96696 15.6962 6.83921 15.6962 7.75768C15.6962 8.6391 15.2185 9.75424 14.3572 10.7068C13.5025 11.6521 12.3974 12.2955 11.318 12.3958L11.3205 12.4226C11.1878 12.4021 11.0519 12.3915 10.9134 12.3915V14.3915C11.2736 14.3915 11.5656 14.6835 11.5656 15.0437V20.0004H13.5656V15.0437C13.5656 14.6373 13.4742 14.2522 13.3108 13.9079C14.2858 13.4783 15.1522 12.8097 15.8407 12.0481C16.9252 10.8486 17.6962 9.27646 17.6962 7.75768C17.6962 6.54698 17.3378 5.41485 16.7199 4.43118C16.9191 3.65782 17.0324 2.96853 17.0324 2.36997C17.0324 1.65535 16.8692 0.942652 16.3565 0.406996L16.0612 0.0983973H15.6341L15.6252 0.0983968C15.3389 0.0983741 14.8142 0.0983323 14.1714 0.304201C13.6633 0.4669 13.1133 0.746715 12.5405 1.20848C11.529 0.849814 10.4201 0.653337 9.26119 0.653337C8.09434 0.653337 6.97815 0.852521 5.96101 1.21589C5.57411 0.921208 5.1218 0.632529 4.6814 0.414228C4.3591 0.254464 3.99269 0.106875 3.63063 0.0393716C3.31311 -0.0198292 2.73839 -0.0659129 2.26001 0.320414L2.08394 0.462611L1.98625 0.666768C1.59405 1.48641 1.62493 2.41933 1.69436 3.0963C1.72549 3.39979 1.77018 3.69506 1.80724 3.93989L1.82463 4.0552C1.84111 4.16537 1.85419 4.25761 1.86409 4.33496C1.20847 5.34074 0.82615 6.50731 0.82615 7.75768C0.82615 10.5157 2.6612 12.8067 5.17912 13.9789C5.0361 14.3048 4.95672 14.665 4.95672 15.0437V15.9826C4.859 15.9469 4.7537 15.9029 4.64096 15.8497C4.25793 15.6689 3.85044 15.4113 3.45364 15.1176C2.64893 14.5221 1.9926 13.8575 1.78091 13.5929C1.4359 13.1616 0.806604 13.0917 0.375342 13.4367C-0.0559202 13.7817 -0.125842 14.411 0.219168 14.8423C0.558222 15.2661 1.34759 16.0472 2.26395 16.7253C2.72769 17.0685 3.24958 17.4046 3.78733 17.6584C4.14653 17.8279 4.54386 17.9756 4.95672 18.0526V20.0004H6.95672V15.0437C6.95672 14.6835 7.24874 14.3915 7.60895 14.3915V12.3915C7.5278 12.3915 7.4475 12.3951 7.36821 12.4023C7.25176 12.3744 7.13405 12.3557 7.05681 12.3436C6.93849 12.3251 6.80188 12.3062 6.67368 12.2884L6.59779 12.2779C6.4412 12.2561 6.3026 12.2362 6.1927 12.2169C6.1479 12.2091 6.11509 12.2026 6.09264 12.1977C4.06111 11.2798 2.82615 9.57818 2.82615 7.75768C2.82615 6.83921 3.13406 5.96696 3.69448 5.20335L3.8883 4.93926V4.61168C3.8883 4.33894 3.84164 4.02012 3.80261 3.75923L3.78372 3.63379C3.74646 3.38709 3.70976 3.14409 3.68393 2.89225C3.65472 2.60751 3.64555 2.35744 3.65776 2.14217ZM6.06513 12.191L6.07071 12.1925C6.06684 12.1915 6.06506 12.191 6.06513 12.191Z" fill="white" />
                </svg>
                <span class="sb-tooltip-text">Explore in Github</span>
            </a>
@{#else}
            <a href='https://github.com/syncfusion/blazor-samples' target="_blank" rel="noopener">
                            <svg width="18" id="github-icon" height="20" viewBox="0 0 18 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path fill-rule="evenodd" clip-rule="evenodd" d="M3.20775 1.99878C3.20739 1.99833 3.2132 1.99816 3.22628 1.99963C3.21465 1.99998 3.20811 1.99924 3.20775 1.99878ZM3.65776 2.14217C3.70049 2.16132 3.74565 2.18261 3.79316 2.20616C4.27029 2.44267 4.7852 2.80709 5.09642 3.09626L5.57644 3.54226L6.177 3.28023C7.08829 2.88263 8.13784 2.65334 9.26119 2.65334C10.3845 2.65334 11.4341 2.88263 12.3454 3.28023L12.9624 3.54943L13.444 3.0791C13.9892 2.54667 14.4462 2.31625 14.7814 2.20891C14.8657 2.1819 14.9457 2.16149 15.022 2.14607C15.0285 2.20947 15.0324 2.28355 15.0324 2.36997C15.0324 2.81179 14.928 3.44791 14.673 4.33555L14.5374 4.80749L14.8279 5.20335C15.3883 5.96696 15.6962 6.83921 15.6962 7.75768C15.6962 8.6391 15.2185 9.75424 14.3572 10.7068C13.5025 11.6521 12.3974 12.2955 11.318 12.3958L11.3205 12.4226C11.1878 12.4021 11.0519 12.3915 10.9134 12.3915V14.3915C11.2736 14.3915 11.5656 14.6835 11.5656 15.0437V20.0004H13.5656V15.0437C13.5656 14.6373 13.4742 14.2522 13.3108 13.9079C14.2858 13.4783 15.1522 12.8097 15.8407 12.0481C16.9252 10.8486 17.6962 9.27646 17.6962 7.75768C17.6962 6.54698 17.3378 5.41485 16.7199 4.43118C16.9191 3.65782 17.0324 2.96853 17.0324 2.36997C17.0324 1.65535 16.8692 0.942652 16.3565 0.406996L16.0612 0.0983973H15.6341L15.6252 0.0983968C15.3389 0.0983741 14.8142 0.0983323 14.1714 0.304201C13.6633 0.4669 13.1133 0.746715 12.5405 1.20848C11.529 0.849814 10.4201 0.653337 9.26119 0.653337C8.09434 0.653337 6.97815 0.852521 5.96101 1.21589C5.57411 0.921208 5.1218 0.632529 4.6814 0.414228C4.3591 0.254464 3.99269 0.106875 3.63063 0.0393716C3.31311 -0.0198292 2.73839 -0.0659129 2.26001 0.320414L2.08394 0.462611L1.98625 0.666768C1.59405 1.48641 1.62493 2.41933 1.69436 3.0963C1.72549 3.39979 1.77018 3.69506 1.80724 3.93989L1.82463 4.0552C1.84111 4.16537 1.85419 4.25761 1.86409 4.33496C1.20847 5.34074 0.82615 6.50731 0.82615 7.75768C0.82615 10.5157 2.6612 12.8067 5.17912 13.9789C5.0361 14.3048 4.95672 14.665 4.95672 15.0437V15.9826C4.859 15.9469 4.7537 15.9029 4.64096 15.8497C4.25793 15.6689 3.85044 15.4113 3.45364 15.1176C2.64893 14.5221 1.9926 13.8575 1.78091 13.5929C1.4359 13.1616 0.806604 13.0917 0.375342 13.4367C-0.0559202 13.7817 -0.125842 14.411 0.219168 14.8423C0.558222 15.2661 1.34759 16.0472 2.26395 16.7253C2.72769 17.0685 3.24958 17.4046 3.78733 17.6584C4.14653 17.8279 4.54386 17.9756 4.95672 18.0526V20.0004H6.95672V15.0437C6.95672 14.6835 7.24874 14.3915 7.60895 14.3915V12.3915C7.5278 12.3915 7.4475 12.3951 7.36821 12.4023C7.25176 12.3744 7.13405 12.3557 7.05681 12.3436C6.93849 12.3251 6.80188 12.3062 6.67368 12.2884L6.59779 12.2779C6.4412 12.2561 6.3026 12.2362 6.1927 12.2169C6.1479 12.2091 6.11509 12.2026 6.09264 12.1977C4.06111 11.2798 2.82615 9.57818 2.82615 7.75768C2.82615 6.83921 3.13406 5.96696 3.69448 5.20335L3.8883 4.93926V4.61168C3.8883 4.33894 3.84164 4.02012 3.80261 3.75923L3.78372 3.63379C3.74646 3.38709 3.70976 3.14409 3.68393 2.89225C3.65472 2.60751 3.64555 2.35744 3.65776 2.14217ZM6.06513 12.191L6.07071 12.1925C6.06684 12.1915 6.06506 12.191 6.06513 12.191Z" fill="white" />
                </svg>
                <span class="sb-tooltip-text">Explore in Github</span>
            </a>
@{#endif}
        </div>
        <div class='sb-header-item sb-table-cell settings-icon'>
            <div class="toggle-settings-icon" @ontouchstart="@(async () => { await ShowTooltip("toggle-settings-icon"); })" @onmouseover="@(async () => { await ShowTooltip("toggle-settings-icon"); })" @onclick="OnSettingsClick" @onclick:stopPropagation="true" role="button" tabindex="0" aria-label="Toggle settings" title='Toggle Settings'>
                <svg width="18" height="20" viewBox="0 0 18 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M9 8.14453L8.80469 8.16406L8.62891 8.18359L8.45312 8.24219L8.27734 8.30078L8.12109 8.37891L7.96484 8.47656L7.82812 8.57422L7.69141 8.69141L7.57422 8.82812L7.47656 8.96484L7.37891 9.12109L7.30078 9.27734L7.24219 9.45312L7.18359 9.62891L7.16406 9.80469L7.14453 10L7.16406 10.1953L7.18359 10.3711L7.24219 10.5469L7.30078 10.7227L7.37891 10.8789L7.47656 11.0352L7.57422 11.1719L7.69141 11.3086L7.82812 11.4258L7.96484 11.5234L8.12109 11.6211L8.27734 11.6992L8.45312 11.7578L8.62891 11.8164L8.80469 11.8359L9 11.8555L9.19531 11.8359L9.37109 11.8164L9.54688 11.7578L9.72266 11.6992L9.87891 11.6211L10.0352 11.5234L10.1719 11.4258L10.3086 11.3086L10.4258 11.1719L10.543 11.0352L10.6211 10.8789L10.6992 10.7227L10.7773 10.5469L10.8164 10.3711L10.8359 10.1953L10.8555 10L10.8359 9.80469L10.8164 9.62891L10.7773 9.45312L10.6992 9.27734L10.6211 9.12109L10.543 8.96484L10.4258 8.82812L10.3086 8.69141L10.1719 8.57422L10.0352 8.47656L9.87891 8.37891L9.72266 8.30078L9.54688 8.24219L9.37109 8.18359L9.19531 8.16406L9 8.14453ZM9 6.30859H9.19531L9.37109 6.32812L9.74219 6.36719L10.0938 6.46484L10.4453 6.58203L10.7578 6.73828L11.0703 6.93359L11.3633 7.14844L11.6172 7.38281L11.8516 7.65625L12.0664 7.92969L12.2617 8.24219L12.418 8.55469L12.5352 8.90625L12.6328 9.25781L12.6914 9.62891V10V10.3711L12.6328 10.7422L12.5352 11.0938L12.418 11.4453L12.2617 11.7578L12.0664 12.0703L11.8516 12.3438L11.6172 12.6172L11.3633 12.8516L11.0703 13.0664L10.7578 13.2422L10.4453 13.3984L10.0938 13.5352L9.74219 13.6133L9.37109 13.6719L9 13.6914L8.62891 13.6719L8.25781 13.6133L7.90625 13.5352L7.55469 13.3984L7.24219 13.2422L6.92969 13.0664L6.65625 12.8516L6.38281 12.6172L6.14844 12.3438L5.93359 12.0703L5.75781 11.7578L5.60156 11.4453L5.46484 11.0938L5.38672 10.7422L5.32812 10.3711L5.30859 10L5.32812 9.62891L5.38672 9.25781L5.46484 8.90625L5.60156 8.55469L5.75781 8.24219L5.93359 7.92969L6.14844 7.65625L6.38281 7.38281L6.65625 7.14844L6.92969 6.93359L7.24219 6.73828L7.55469 6.58203L7.90625 6.46484L8.25781 6.36719L8.62891 6.32812L9 6.30859ZM8.35547 2.59766L8.16016 3.84766L8.02344 4.90234L7.04688 5.29297L6.75391 5.42969L6.46094 5.58594L6.1875 5.76172L5.875 5.97656L5.05469 6.60156L2.92578 5.74219L2.26172 6.85547L4.09766 8.28125L3.96094 9.31641L3.92188 10V10.3125L4.09766 11.7188L2.26172 13.1445L2.92578 14.2773L5.07422 13.3984L5.91406 14.043L6.1875 14.2383L6.48047 14.4141L6.75391 14.5703L7.04688 14.707L8.02344 15.0977L8.35547 17.4023H9.64453L9.97656 15.0977L10.9727 14.707L11.2461 14.5703L11.5391 14.4141L11.832 14.2383L12.125 14.0234L12.9453 13.3984L15.0938 14.2578L15.7383 13.1445L13.9219 11.7188L14.0391 10.6641L14.0977 10L14.0781 9.53125L13.9219 8.28125L15.7383 6.83594L15.0742 5.72266L12.9258 6.60156L12.0859 5.95703L11.793 5.76172L11.5195 5.58594L11.2266 5.42969L10.9336 5.29297L9.95703 4.90234L9.64453 2.59766H8.35547ZM7.14453 0.761719H10.8555H10.9336L11.0117 0.78125L11.0898 0.820312L11.1484 0.859375L11.207 0.917969L11.2461 0.996094L11.2852 1.05469L11.3047 1.13281L11.6562 3.59375L12.0664 3.76953L12.4766 3.98438L12.8477 4.23828L13.2188 4.49219L15.5234 3.57422L15.6016 3.55469H15.6797H15.7969L15.9141 3.61328L16.0117 3.67188L16.0898 3.76953L17.9258 6.97266L17.9648 7.05078L17.9844 7.12891V7.20703V7.30469L17.9648 7.38281L17.9258 7.44141L17.8867 7.51953L17.8281 7.57812L15.875 9.10156L15.9141 9.53125L15.9336 10L15.9141 10.4688L15.875 10.8984L17.8281 12.4219L17.8867 12.4805L17.9258 12.5586L17.9648 12.6172L17.9844 12.6953V12.793V12.8711L17.9648 12.9492L17.9258 13.0273L16.0898 16.2305L16.0117 16.3281L15.9141 16.3867L15.7969 16.4453H15.7383H15.6016L15.5234 16.4258L13.2188 15.5078L12.8477 15.7617L12.4766 15.9961L12.0664 16.2109L11.6562 16.4062L11.3047 18.8672L11.2852 18.9453L11.2461 19.0039L11.207 19.082L11.1484 19.1406L11.0898 19.1797L11.0117 19.2188L10.9336 19.2383H10.8555H7.14453H7.06641L6.98828 19.2188L6.91016 19.1797L6.85156 19.1406L6.79297 19.082L6.75391 19.0039L6.71484 18.9453L6.69531 18.8672L6.34375 16.4062L5.93359 16.2109L5.54297 16.0156L5.15234 15.7617L4.78125 15.5078L2.47656 16.4258L2.41797 16.4453H2.32031H2.20312L2.08594 16.3867L1.98828 16.3281L1.91016 16.2305L0.0742188 13.0273L0.0351562 12.9492L0.015625 12.8711V12.793V12.6953L0.0351562 12.6172L0.0742188 12.5586L0.113281 12.4805L0.171875 12.4219L2.125 10.8984L2.08594 10.4492L2.06641 10L2.08594 9.55078L2.125 9.10156L0.171875 7.57812L0.113281 7.51953L0.0742188 7.44141L0.0351562 7.38281L0.015625 7.30469V7.20703V7.12891L0.0351562 7.05078L0.0742188 6.97266L1.91016 3.76953L1.98828 3.67188L2.08594 3.61328L2.14453 3.57422L2.26172 3.55469H2.39844L2.47656 3.57422L4.78125 4.49219L5.15234 4.23828L5.54297 4.00391L5.93359 3.78906L6.34375 3.59375L6.69531 1.13281L6.71484 1.05469L6.75391 0.996094L6.79297 0.917969L6.85156 0.859375L6.91016 0.820312L6.98828 0.78125L7.06641 0.761719H7.14453Z" fill="white" />
                </svg>
                <span class="sb-tooltip-text">Toggle Settings</span>
            </div>
        </div>
    </div>
</div>
<div class="sb-sub-header">
    <NavMenuComponent @ref="NavMenuRef"></NavMenuComponent>
</div>

<div class=@overlayClass @onclick="OnPopupHide">
    @if (isNotifyClicked)
    {
        <div class="@notificationClass" tabindex="0" @onkeydown="OnNotificationKeyDown" @onclick:stopPropagation="true">
            <div class='sb-notification-item'>
                <span class="sb-notification-update">New Updates</span>
                <span class="sb-notification-new">
                    <a href="https://www.syncfusion.com/products/whatsnew/blazor-components" target="_blank">
                        <div class="sb-whatsnew-content">Whats New</div>
                    </a>
                </span>
                <div class="sb-notification-clear-icon" role="button" tabindex="0" aria-label="notification settings menu" @onclick="OnPopupHide">
                    <span class='sb-notification sb-icons sf-clear-icon'></span>
                </div>
            </div>
            <hr />
            <div>
                @foreach (var ComponentList in componentnotificationlist)
                {
                    @if (ComponentList.NotificationContent.Length > 0)
                    {
                        var listclass = "sb-notification-list" + SampleUtils.SPACE + "list-type-none";
                        <div class="sb-notification-content-container">
                            <div class=" sb-notification-content">
                                <div class="sb-notification-category">
                                    <a href='@(UriHelper.BaseUri + ComponentList.DefaultSamplePath.ToLower())' target="_blank"> @ComponentList.Name</a>
                                </div>
                                <div class="sb-notification-list-container">
                                    <ul class="@listclass">
                                        @foreach (var content in ComponentList.NotificationContent)
                                        {
                                            <li>@content</li>
                                            @if (ComponentList.NotificationContent.Length > 1)
                                            {
                                                <br />
                                            }
                                        }
                                    </ul>
                                </div>
                            </div>
                        </div>
                    }

                }
                @foreach (var ComponentList in notificationlist)
                {
                    var listclass = "sb-notification-list";
                    <div class="sb-notification-content-container">
                        <div class=" sb-notification-content">
                            <div class="sb-notification-category">
                                <a href='@(UriHelper.BaseUri + ComponentList.DefaultSamplePath.ToLower())' target="_blank"> @ComponentList.Name</a>
                            </div>
                            @foreach (var SampleList in ComponentList.SampleList)
                            {
                                <div class="sb-notification-list-container">
                                    <div class="sb-notification-sample">
                                        @SampleList.SampleName -
                                        <span class="sb-Notification-link-label">
                                            <a href='@(UriHelper.BaseUri + SampleList.SampleUrl.ToLower())' target="_blank">View Demo</a>
                                        </span>
                                    </div>
                                    @if (SampleList.NotificationContent.Length == 1)
                                    {
                                        listclass = listclass + SampleUtils.SPACE + "list-type-none";
                                    }
                                    <ul class="@listclass">
                                        @foreach (var content in SampleList.NotificationContent)
                                        {
                                            <li>@content</li>
                                        }
                                    </ul>
                                </div>
                                count++;
                            }
                        </div>
                    </div>
                }
                @if (count == 0)
                {
                    <span class="sb-notifiction-Update">No new updates available.</span>
                }
            </div>
        </div>
    }
</div>

@if (isSettingsToggled)
{
    <div id="settingsDiv" class="preference-settings mobile-settings @(isSettingsToggled ? "active" : "")" @onclick="OnDevicePreferenceClick" @onclick:stopPropagation="true">
        <span id="settings-popup-text">Settings</span>
        <svg @onclick="OnSettingsClick" role="button" tabindex="0" aria-label="Toggle settings" title='Toggle Settings' id="close-settings-popup" width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M1.25781 0.4375H1.33594L1.49219 0.476562L1.64844 0.535156L1.78516 0.613281L7 5.84766L12.2148 0.613281L12.3516 0.535156L12.5078 0.476562L12.6641 0.4375H12.8203L12.9766 0.476562L13.1328 0.535156L13.2695 0.613281L13.3867 0.730469L13.4648 0.867188L13.5234 1.02344L13.5625 1.17969V1.33594L13.5234 1.49219L13.4648 1.64844L13.3867 1.78516L8.15234 7L13.3867 12.2148L13.4648 12.3516L13.5234 12.5078L13.5625 12.6641V12.8203L13.5234 12.9766L13.4648 13.1328L13.3867 13.2695L13.2695 13.3867L13.1328 13.4648L12.9766 13.5234L12.8203 13.5625H12.6641L12.5078 13.5234L12.3516 13.4648L12.2148 13.3867L7 8.15234L1.78516 13.3867L1.64844 13.4648L1.49219 13.5234L1.33594 13.5625H1.17969L1.02344 13.5234L0.867188 13.4648L0.730469 13.3867L0.613281 13.2695L0.535156 13.1328L0.476562 12.9766L0.4375 12.8203V12.6641L0.476562 12.5078L0.535156 12.3516L0.613281 12.2148L5.84766 7L0.671875 1.84375L0.574219 1.70703L0.496094 1.57031L0.457031 1.41406L0.4375 1.25781L0.457031 1.10156L0.496094 0.945312L0.574219 0.808594L0.671875 0.671875L0.808594 0.574219L0.945312 0.496094L1.10156 0.457031L1.25781 0.4375Z" fill="#424242" />
        </svg>

        <div class="items">
            <div class="icons">
                <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M10.9375 13.2031H10.8203L10.7227 13.2227L10.5078 13.2812L10.3125 13.3789L10.1367 13.5352L10.0781 13.5938L10.0586 13.6523L10.0195 13.7305L10 13.8086L9.98047 14.082L10 14.7656V15.2344L9.98047 15.4883H10.3711L10.7422 15.4688L10.918 15.4492L11.2305 15.3906L11.4844 15.3125L11.582 15.2539L11.6602 15.1953L11.7383 15.1367L11.8945 14.9609L11.9922 14.7656L12.0508 14.5508L12.0703 14.3359L12.0508 14.1211L11.9922 13.9062L11.8945 13.7109L11.7383 13.5352L11.5625 13.3789L11.3672 13.2812L11.1523 13.2227L10.9375 13.2031ZM12.6758 11.543L12.6367 11.582L12.3242 11.8945L12.2461 12.0117V12.1094V12.207L12.2852 12.3047L12.3047 12.3242L12.9688 12.9883L13.0664 13.0273H13.1641L13.2617 13.0078L13.3594 12.9688L13.7305 12.5977L12.6758 11.543ZM5.07812 9.55078H5.25391L5.41016 9.57031L5.56641 9.60938L5.72266 9.66797L5.85938 9.74609L5.99609 9.82422L6.11328 9.92188L6.23047 10.0195L6.34766 10.1367L6.44531 10.2734L6.52344 10.4102L6.58203 10.5469L6.64062 10.7031L6.67969 10.8594L6.71875 11.0156V11.1914V11.3477L6.67969 11.5234L6.64062 11.6797L6.58203 11.8164L6.52344 11.9727L6.44531 12.1094L6.34766 12.2266L6.23047 12.3438L6.11328 12.4414L5.99609 12.5391L5.85938 12.6172L5.72266 12.6953L5.56641 12.7539L5.41016 12.793L5.25391 12.8125L5.07812 12.832L4.90234 12.8125L4.74609 12.793L4.58984 12.7539L4.43359 12.6953L4.29688 12.6172L4.16016 12.5391L4.04297 12.4414L3.92578 12.3438L3.80859 12.2266L3.71094 12.1094L3.63281 11.9727L3.57422 11.8164L3.51562 11.6797L3.47656 11.5234L3.4375 11.3477V11.1914V11.0156L3.47656 10.8594L3.51562 10.7031L3.57422 10.5469L3.63281 10.4102L3.71094 10.2734L3.80859 10.1367L3.92578 10.0195L4.04297 9.92188L4.16016 9.82422L4.29688 9.74609L4.43359 9.66797L4.58984 9.60938L4.74609 9.57031L4.90234 9.55078H5.07812ZM17.9297 6.875H17.832L17.7539 6.91406L17.6562 6.95312L17.5781 7.01172L13.5742 10.7227L14.5703 11.6992L18.2812 7.69531L18.3398 7.61719L18.3789 7.53906L18.3984 7.44141V7.36328V7.26562L18.3594 7.16797L18.3203 7.08984L18.2617 7.01172L18.1836 6.95312L18.1055 6.91406L18.0273 6.89453L17.9297 6.875ZM7.12891 5.44922H7.24609L7.38281 5.46875L7.5 5.48828L7.61719 5.54688L7.8125 5.64453L8.00781 5.80078L8.14453 5.97656L8.26172 6.19141L8.30078 6.30859L8.33984 6.42578L8.35938 6.54297V6.67969V6.79688L8.33984 6.91406L8.30078 7.03125L8.26172 7.14844L8.14453 7.36328L8.00781 7.53906L7.8125 7.69531L7.61719 7.8125L7.5 7.85156L7.38281 7.87109L7.24609 7.89062L7.12891 7.91016L7.01172 7.89062L6.875 7.87109L6.75781 7.85156L6.64062 7.8125L6.44531 7.69531L6.25 7.53906L6.11328 7.36328L5.99609 7.14844L5.95703 7.03125L5.91797 6.91406L5.89844 6.79688V6.67969V6.54297L5.91797 6.42578L5.95703 6.30859L5.99609 6.19141L6.11328 5.97656L6.25 5.80078L6.44531 5.64453L6.64062 5.54688L6.75781 5.48828L6.875 5.46875L7.01172 5.44922H7.12891ZM12.0508 3.80859H12.168L12.3047 3.82812L12.4219 3.84766L12.5391 3.90625L12.7344 4.00391L12.9297 4.16016L13.0664 4.33594L13.1836 4.55078L13.2227 4.66797L13.2617 4.78516L13.2812 4.90234V5.03906V5.15625L13.2617 5.27344L13.2227 5.39062L13.1836 5.50781L13.0664 5.72266L12.9297 5.89844L12.7344 6.05469L12.5391 6.17188L12.4219 6.21094L12.3047 6.23047L12.168 6.25L12.0508 6.26953L11.9336 6.25L11.7969 6.23047L11.6797 6.21094L11.5625 6.17188L11.3672 6.05469L11.1719 5.89844L11.0352 5.72266L10.918 5.50781L10.8789 5.39062L10.8398 5.27344L10.8203 5.15625V5.03906V4.90234L10.8398 4.78516L10.8789 4.66797L10.918 4.55078L11.0352 4.33594L11.1719 4.16016L11.3672 4.00391L11.5625 3.90625L11.6797 3.84766L11.7969 3.82812L11.9336 3.80859H12.0508ZM9.58984 1.95312L9.17969 1.97266L8.76953 1.99219L8.37891 2.05078L7.96875 2.10938L7.59766 2.20703L7.20703 2.32422L6.83594 2.44141L6.48438 2.57812L6.11328 2.73438L5.78125 2.92969L5.44922 3.10547L5.11719 3.32031L4.80469 3.53516L4.49219 3.78906L4.21875 4.02344L3.92578 4.29688L3.67188 4.57031L3.41797 4.86328L3.18359 5.17578L2.94922 5.48828L2.75391 5.80078L2.55859 6.13281L2.38281 6.48438L2.22656 6.83594L2.07031 7.20703L1.95312 7.57812L1.83594 7.94922L1.75781 8.33984L1.67969 8.73047L1.64062 9.14062L1.60156 9.55078L1.58203 9.96094L1.60156 10.3516L1.62109 10.7422L1.66016 11.1523L1.71875 11.543L1.79688 11.9336L1.89453 12.3047L2.01172 12.6758L2.12891 13.0469L2.26562 13.418L2.44141 13.7695L2.61719 14.1211L2.8125 14.4531L3.02734 14.7656L3.26172 15.0977L3.51562 15.3906L3.78906 15.6836L4.0625 15.957L4.375 16.2109L4.70703 16.4648L5.05859 16.6992L5.42969 16.9141L5.82031 17.1289L6.23047 17.3047L6.66016 17.4805L7.10938 17.6172L7.59766 17.7539L8.08594 17.8516L8.61328 17.9297L9.16016 17.9883L9.74609 18.0273L10.332 18.0469L10.957 18.0273L11.0547 18.0078L11.1523 17.9883L11.2305 17.9297L11.3086 17.8711L11.3867 17.7734L11.4258 17.6953L11.4648 17.5781L11.4844 17.4609L11.5625 16.582L11.3477 16.6211L11.0156 16.6797L10.5469 16.7188H10.2344L9.10156 16.6992L8.94531 16.6602L8.80859 16.582L8.69141 16.4648L8.61328 16.3281L8.57422 16.1914V16.0352L8.59375 15.8789L8.69141 15.6836L8.73047 15.5469L8.75 15.4102L8.76953 15.0977L8.75 14.0625L8.76953 13.8281L8.78906 13.5938L8.84766 13.3398L8.94531 13.1055L9.08203 12.8711L9.16016 12.7734L9.25781 12.6562L9.45312 12.5L9.64844 12.3438L9.86328 12.2266L10.0781 12.1289L10.3125 12.0508L10.5469 11.9922L10.7812 11.9727H11.0156L11.0352 11.7969L11.0938 11.6211L11.1523 11.4453L11.2305 11.2891L11.3281 11.1328L11.4648 10.9961L11.6016 10.8594L16.6016 6.25L16.5625 6.09375L16.4258 5.60547L16.3281 5.37109L16.2305 5.13672L16.1328 4.92188L16.0156 4.70703L15.8984 4.51172L15.7617 4.31641L15.6055 4.12109L15.4688 3.94531L15.1367 3.61328L14.7852 3.32031L14.3945 3.04688L14.1602 2.92969L13.9258 2.79297L13.418 2.57812L12.8711 2.38281L12.3047 2.22656L11.6797 2.10938L11.0156 2.03125L10.3125 1.97266L9.58984 1.95312ZM9.58984 0.722656H9.98047L10.3711 0.742188L11.1328 0.800781L11.875 0.898438L12.5781 1.03516L12.9102 1.11328L13.2422 1.21094L13.5547 1.32812L13.8672 1.44531L14.1797 1.5625L14.4727 1.69922L14.7656 1.85547L15.0391 2.01172L15.2734 2.16797L15.5078 2.34375L15.7422 2.51953L15.957 2.69531L16.1523 2.89062L16.3477 3.10547L16.543 3.30078L16.6992 3.53516L16.875 3.76953L17.0312 4.00391L17.168 4.25781L17.3047 4.51172L17.4219 4.78516L17.5391 5.05859L17.6367 5.33203L17.7148 5.66406L17.9492 5.64453L18.1055 5.66406L18.2812 5.68359L18.4375 5.72266L18.5742 5.78125L18.7305 5.85938L18.8672 5.9375L19.0039 6.03516L19.1406 6.15234L19.2578 6.26953L19.3555 6.40625L19.4336 6.5625L19.5117 6.69922L19.5703 6.85547L19.6094 7.01172L19.6289 7.16797L19.6484 7.32422L19.6289 7.5L19.6094 7.65625L19.5898 7.8125L19.5312 7.96875L19.4727 8.125L19.3945 8.26172L19.2969 8.39844L19.1797 8.53516L15.0391 13.0078L14.2773 13.8086L14.1406 13.9258L13.9844 14.043L13.8281 14.1211L13.6523 14.1797L13.4766 14.2188L13.3008 14.2578V14.4336L13.2812 14.6094L13.2617 14.7852L13.2227 14.9609L13.1641 15.1367L13.1055 15.293L13.0078 15.4688L12.9297 15.625L12.793 16.6602L12.6953 17.6953L12.6562 17.8711L12.6172 18.0273L12.5586 18.1836L12.4805 18.3203L12.4023 18.457L12.3047 18.5938L12.207 18.7109L12.0898 18.8281L11.9531 18.9258L11.8164 19.0234L11.6797 19.1016L11.5234 19.1602L11.3477 19.2188L11.1914 19.2383L10.9961 19.2578L10.332 19.2773L9.6875 19.2578L9.0625 19.2188L8.45703 19.1602L7.87109 19.0625L7.30469 18.9453L6.75781 18.7891L6.25 18.6328L5.76172 18.4375L5.27344 18.2227L4.82422 17.9883L4.39453 17.7539L4.00391 17.4805L3.61328 17.1875L3.24219 16.875L2.91016 16.543L2.57812 16.2109L2.28516 15.8398L2.01172 15.4883L1.75781 15.0977L1.54297 14.707L1.32812 14.3164L1.13281 13.9062L0.976562 13.4766L0.820312 13.0469L0.703125 12.6172L0.585938 12.1875L0.507812 11.7383L0.449219 11.2891L0.390625 10.8594L0.371094 10.4102L0.351562 9.96094L0.371094 9.47266L0.410156 9.00391L0.46875 8.55469L0.546875 8.08594L0.644531 7.63672L0.78125 7.20703L0.917969 6.77734L1.09375 6.36719L1.26953 5.95703L1.46484 5.54688L1.69922 5.17578L1.93359 4.78516L2.1875 4.43359L2.46094 4.08203L2.75391 3.75L3.06641 3.41797L3.37891 3.125L3.71094 2.83203L4.0625 2.55859L4.43359 2.30469L4.80469 2.07031L5.19531 1.83594L5.58594 1.64062L5.99609 1.44531L6.42578 1.28906L6.85547 1.13281L7.28516 1.01562L7.73438 0.917969L8.18359 0.839844L8.65234 0.78125L9.12109 0.742188L9.58984 0.722656Z" fill="#424242" />
                </svg>
            </div>
            <div class="themedropdown">
                <span>Choose Theme</span>
                @{
                    var themeName = SampleUtils.GetThemeName(UriHelper.Uri);
                    // var themeParts = themeName.Split("-");
                    // themeName = themeParts[0];
                    var selectedTheme = SampleUtils.ThemeData.Where(item => item.ID == themeName).ToList();
                    var currentTheme = SampleUtils.ThemeData.First().Text;
                    if (selectedTheme.Any())
                    {
                        currentTheme = selectedTheme.First().Text;
                    }
                }

                <span style="margin-top:-20px;margin-left:40px">
                    <DropDownComponent @ref="ThemeDropDownRefForMobile" DataSource="@SampleUtils.ThemeData" Value="@currentTheme" OnSelect="OnThemeChange"></DropDownComponent>
                </span>

            </div>
        </div>
        <div class="items">
            <div class="icons">
                <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path fill-rule="evenodd" clip-rule="evenodd" d="M6.0345 9C6.22024 6.31944 7.08676 3.97276 8.05828 2.23727C4.89268 3.02654 2.47322 5.70145 2.06189 9H6.0345ZM6.02737 11H2.06189C2.47499 14.3128 4.91359 16.9965 8.09928 17.7728C6.76869 15.4424 6.16192 13.1444 6.02737 11ZM8.03809 11H12.0537C11.91 12.9397 11.3218 15.0235 10.0459 17.1355C8.76999 15.0235 8.18178 12.9397 8.03809 11ZM12.05 9H8.04176C8.23658 6.47155 9.12088 4.29948 10.0459 2.79341C10.9709 4.29948 11.8552 6.47155 12.05 9ZM14.0644 11C13.9304 13.1361 13.3278 15.4247 12.0078 17.7459C15.141 16.9361 17.5297 14.2755 17.9381 11H14.0644ZM17.9381 9H14.0573C13.8725 6.33358 13.0142 3.99752 12.0489 2.26478C15.1618 3.08715 17.5314 5.73877 17.9381 9ZM20 10C20 15.5228 15.5228 20 10 20C4.47715 20 0 15.5228 0 10C0 4.47715 4.47715 0 10 0C15.5228 0 20 4.47715 20 10Z" fill="#424242" />
                </svg>
            </div>
            <div class="localization">
                <span>Localization</span>
                <span style="margin-top:-20px;margin-left:60px"><CultureSwitcher @ref="cultureRef" /></span>
            </div>
        </div>
    </div>
}

@code {
    private string searchClass { get; set; }
    private string currentTheme { get; set; }
    private string preferenceClass { get; set; }
    private string notificationClass { get; set; }
    private string overlayClass { get; set; }
    private bool isPreferenceClicked { get; set; }
    private List<NotificationList> notificationlist { get; set; }
    private List<NotificationList> componentnotificationlist { get; set; }
    public bool isNotifyClicked { get; set; }
    public int count { get; set; } = 0;
    private string DemoLink { get; set; }
    private Preferences preferenceRef { get; set; }
    private SearchComponent searchRef { get; set; }
    public DropDownComponent dropdownRef { get; set; }
    public string componentName { get; set; }
    private bool isSettingsToggled = false;
    private CultureSwitcher cultureRef { get; set; }
    private DropDownComponent ThemeDropDownRefForMobile { get; set; }
    private bool isThemeDropdownVisible;
    private bool isCultureDropdownVisible;
    private string popupClass { get; set; }
    /// <summary>
    /// NavMenuComponent reference for outside usage.
    /// </summary>
    public NavMenuComponent NavMenuRef { get; set; }
    /// <summary>
    /// Triggers event callback on left toggle button action.
    /// </summary>
    [Parameter]
    public EventCallback OnToggleClick { get; set; }

    /// <summary>
    /// Triggers event callback on right toggle button action in device rendering.
    /// </summary>
    [Parameter]
    public EventCallback OnRightToggleClick { get; set; }

    /// <summary>
    /// Triggers event callback on home icon button click action.
    /// </summary>
    [Parameter]
    public EventCallback HomeIconClick { get; set; }

    /// <summary>
    /// Triggers event callback on search icon button click action in mobile mode.
    /// </summary>
    [Parameter]
    public EventCallback OnSearchRender { get; set; }

    // Theme switcher change handler
    private async Task OnThemeChange(DropDownData args)
    {
        var currentTheme = SampleUtils.GetThemeName(UriHelper.Uri);
        if (currentTheme != args.ID)
        {
            await JsRuntime.InvokeVoidAsync("sfBlazorSB.setValue", "SelectedTheme", args.ID);
            var url = SampleUtils.GetThemeUrl(UriHelper, args.ID);
            UriHelper.NavigateTo(url, true);
        }
    }
    private async Task NavigateToHome()
    {
        string url = "/"; // Set the target URL
                          //UriHelper.NavigateTo(url);
                          // Call the JavaScript function
        await JsRuntime.InvokeVoidAsync("NavigateToHomePage", url);
    }
    // Preference popup click handler for mobile.
    public void OnDevicePreferenceClick()
    {
        HideDevicePopup();
    }

    private async Task ShowTooltip(string IconName)
    {
        await JsRuntime.InvokeVoidAsync("showTooltip",IconName);

    }

    public void HideDevicePopup()
    {
        if (!cultureRef.DropDownRef.isthemepopupopen)
        {
            cultureRef.DropDownRef.popupClass = SampleUtils.AddClass(cultureRef.DropDownRef.popupClass, SampleUtils.DISPLAY_NONE);
            cultureRef.DropDownRef.Refresh();
        }
        if (!ThemeDropDownRefForMobile.isthemepopupopen)
        {
            ThemeDropDownRefForMobile.popupClass = SampleUtils.AddClass(ThemeDropDownRefForMobile.popupClass, SampleUtils.DISPLAY_NONE);
            ThemeDropDownRefForMobile.Refresh();
        }
    }
    public void NotifyClicked()
    {
        if (notificationClass.Contains(SampleUtils.ACTIVE_CLASS))
        {
            notificationClass = SampleUtils.RemoveClass(notificationClass, SampleUtils.ACTIVE_CLASS);
            notificationClass = SampleUtils.AddClass(notificationClass, SampleUtils.DISPLAY_NONE);
            overlayClass = SampleUtils.AddClass(overlayClass, SampleUtils.HIDDEN);
            isNotifyClicked = false;
        }
        else
        {
            notificationClass = SampleUtils.RemoveClass(notificationClass, SampleUtils.DISPLAY_NONE);
            notificationClass = SampleUtils.AddClass(notificationClass, SampleUtils.ACTIVE_CLASS);
            overlayClass = SampleUtils.RemoveClass(overlayClass, SampleUtils.HIDDEN);
            isNotifyClicked = true;
        }
    }

    public void OnNotificationKeyDown(KeyboardEventArgs e)
    {
        if (e.Key == "Escape")
        {
            OnPopupHide();
        }
    }
    /// <summary>
    /// Show or hide the preferences popup element.
    /// </summary>
    /// <param name="isOpen">Specifies the bool value to show or hide popup element.</param>
    public void ShowPopup(bool isOpen = true)
    {
        if (isOpen)
        {
            popupClass = SampleUtils.RemoveClass(popupClass, SampleUtils.DISPLAY_NONE);
        }
        else
        {
            popupClass = SampleUtils.AddClass(popupClass, SampleUtils.DISPLAY_NONE);
            if (cultureRef.DropDownRef.isthemepopupopen)
            {
                cultureRef.DropDownRef.popupClass = SampleUtils.AddClass(cultureRef.DropDownRef.popupClass, SampleUtils.DISPLAY_NONE);
                cultureRef.DropDownRef.Refresh();
                cultureRef.DropDownRef.isthemepopupopen = false;
            }
        }
        StateHasChanged();
    }

    public void OnPopupHide()
    {
        notificationClass = SampleUtils.AddClass(notificationClass, SampleUtils.DISPLAY_NONE);
        notificationClass = SampleUtils.RemoveClass(notificationClass, SampleUtils.ACTIVE_CLASS);
        isNotifyClicked = false;
        overlayClass = SampleUtils.AddClass(overlayClass, SampleUtils.HIDDEN);
        StateHasChanged();
    }

    // Preferences icon click handler.
    private void OnPreferenceClick()
    {
        isPreferenceClicked = true;
        var isActive = preferenceClass.Contains(SampleUtils.ACTIVE_CLASS);
        if (isActive)
        {
            preferenceClass = SampleUtils.RemoveClass(preferenceClass, SampleUtils.ACTIVE_CLASS);
        }
        else
        {
            preferenceClass = SampleUtils.AddClass(preferenceClass, SampleUtils.ACTIVE_CLASS);
        }
        preferenceRef.ShowPopup(!isActive);
    }


    private void ToggleThemeDropdown()
    {
        isThemeDropdownVisible = !isThemeDropdownVisible;
        isCultureDropdownVisible = false;
    }

    private void ToggleCultureDropdown()
    {
        isCultureDropdownVisible = !isCultureDropdownVisible;
        isThemeDropdownVisible = false;
    }
    /// <summary>
    /// Hides the preferences popup element.
    /// </summary>
    public void HidePreferences()
    {
        if (!isPreferenceClicked && !preferenceRef.IsPopupClicked())
        {
            preferenceClass = SampleUtils.RemoveClass(preferenceClass, SampleUtils.ACTIVE_CLASS);
            preferenceRef.ShowPopup(false);
            StateHasChanged();
        }
        isPreferenceClicked = false;
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        currentTheme = SampleUtils.GetThemeName(UriHelper.Uri);
        searchClass = SampleUtils.HEADER_SEARCH_CLASS;
        preferenceClass = SampleUtils.HEADER_PREFERENCES_CLASS;
        overlayClass = "sb-notification-overlay" + SampleUtils.HIDDEN;
        notificationlist = new NotificationList().GetNotificationData();
        componentnotificationlist = new NotificationList().GetComponentNotificationData();
        notificationClass = SampleUtils.NOTIFICATION_POPUP_CLASS + SampleUtils.SPACE + SampleUtils.DISPLAY_NONE;
        SampleService.Update(UriHelper);
        componentName = SampleService.SampleInfo.Directory == "Buttons/Button" ? "Button" : SampleService.ComponentName;
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
        if (cultureRef != null && cultureRef.DropDownRef != null)
        {
            if (cultureRef.DropDownRef.isthemepopupopen)
            {
                cultureRef.DropDownRef.isthemepopupopen = false;
            }

        }
        if (ThemeDropDownRefForMobile != null)
        {
            if (ThemeDropDownRefForMobile.isthemepopupopen)
            {
                ThemeDropDownRefForMobile.isthemepopupopen = false;
            }
        }
    }
    public void OnSettingsClick()
    {
        isSettingsToggled = !isSettingsToggled;
    }
    private void CloseSidebar()
    {
        if (isSettingsToggled)
        {
            isSettingsToggled = false;
        }
    }
}
<style>
    .bootstrap5-dark svg path {
        fill: #371E73;
    }

    .fluent-dark svg path {
        fill: #371E73;
    }

    .material3-dark svg path {
        fill: #371E73;
    }

    .tailwind-dark svg path {
        fill: #371E73;
    }

    .highcontrast svg path, .fluent2-highcontrast svg path, .tailwind3-dark svg path, .fluent2-dark svg path {
        fill: #371E73;
    }

    .bootstrap5-dark .mobile-settings svg path {
        fill: #9e9e9e;
    }

    .fluent-dark .mobile-settings svg path {
        fill: #9e9e9e;
    }

    .material3-dark .mobile-settings svg path {
        fill: #9e9e9e;
    }

    .tailwind-dark .mobile-settings svg path {
        fill: #9e9e9e;
    }

    .highcontrast .mobile-settings svg path, .fluent2-highcontrast .mobile-settings svg path, .tailwind3-dark .mobile-settings svg path, .fluent2-dark .mobile-settings svg path {
        fill: #9e9e9e;
    }

    .page {
        position: relative;
    }

    .box {
        position: absolute;
        top: 0;
        left: 0;
    }

    .top-row {
        background-color: #6750A4;
        width: 100%;
        position: fixed;
        top: 0;
        left: 0;
        z-index: 1000; /* Adjust z-index to make sure it's above other content */
    }

    .first-row {
        display: flex;
        align-items: center;
    }

    .toggle-icons {
        position: relative;
        width: 40px;
        height: 40px;
        left: 16px;
        top: 10px;
        cursor: pointer;
    }

    .top-row h1 {
        position: relative;
        width: 149px;
        height: 24px;
        left: 36px;
        font-family: Roboto;
        font-size: 16px;
        font-weight: 500;
        letter-spacing: 0.15000000596046448px;
        text-align: left;
        color: #FFFFFF;
    }

    #settings-popup-text {
        width: 60px;
        height: 24px;
        color: #1C1B1F;
        font-family: Roboto;
        font-size: 16px;
        font-weight: 550;
        line-height: 24px;
        text-align: left;
        margin-left: 9px;
        margin-bottom: 20px;
        padding: 15px;
    }

    .bootstrap5-dark #settings-popup-text {
        color: #E6E1E5 !important;
    }

    .fluent-dark #settings-popup-text {
        color: #E6E1E5 !important;
    }

    .material3-dark #settings-popup-text {
        color: #E6E1E5 !important;
    }

    .tailwind-dark #settings-popup-text {
        color: #E6E1E5 !important;
    }

    .highcontrast #settings-popup-text, .fluent2-highcontrast #settings-popup-text, .tailwind3-dark #settings-popup-text, .fluent2-dark #settings-popup-text {
        color: #E6E1E5 !important;
    }

    #close-settings-popup {
        right: 10px;
        position: absolute;
        /* margin-bottom: 20px; */
        top: 20px;
    }

    .search-icons {
        position: relative;
        width: 23px;
        height: 40px;
        top: 10px;
        left: 50px;
        vertical-align: initial;
    }

    .git-icons {
        top: 10px;
        position: absolute;
        vertical-align: initial;
        width: 30px;
        height: 40px;
        /* left: 65px; */
        top: 16px;
        right: 40px;
    }

    .settings-icon {
        position: absolute;
        right: 1px;
        vertical-align: initial;
        width: 30px;
        height: 40px;
        top: 16px;
    }

    .sf-syncfusion-icons {
        text-transform: none;
        position: relative;
        margin-top: 9px;
        margin-right: 12px;
        margin-left: 12px;
    }

    .sf-names {
        font-family: Roboto;
        font-size: 16px;
        font-weight: 800;
        line-height: 24px;
        color: #1C1B1F;
    }

    .sf-components {
        font-family: Roboto;
        color: #6750A4;
        font-weight: 500;
        font-size: 16px;
        line-height: 20px;
    }
    /*.toggle-button {
                    cursor: pointer;
                }*/

    .mobile-settings {
        overflow-x: auto;
        position: fixed;
        z-index: 1000;
        bottom: 0px;
        background-color: #FFFFFF;
        display: none;
        flex-direction: column;
        width: 100%;
        gap: 0px;
        border-radius: 4px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        overflow: auto;
    }

    .bootstrap5-dark .mobile-settings {
        background-color: #2f2e2e;
    }

    .fluent-dark .mobile-settings {
        background-color: #2f2e2e;
    }

    .material3-dark .mobile-settings {
        background-color: #2f2e2e;
    }

    .tailwind-dark .mobile-settings {
        background-color: #2f2e2e;
    }

    .highcontrast .mobile-settings, .fluent2-highcontrast .mobile-settings, .tailwind3-dark .mobile-settings, .fluent2-dark .mobile-settings {
        background-color: #2f2e2e;
    }
    /* Hide scrollbar track and handle */
    .mobile-settings::-webkit-scrollbar {
        width: 0px;
        background: transparent; /* Optional: Make scrollbar area transparent */
    }

    .mobile-settings.active {
        display: flex;
    }

    .containers {
        display: flex;
        flex-direction: column;
        margin: 20px 15px 15px 15px;
    }

    .items {
        margin-top: 10px;
        margin-bottom: 10px;
    }

    .localization {
        display: flex;
        color: #1C1B1F !important;
        font-family: "Roboto", "Segoe UI", "GeezaPro", "DejaVu Serif", "sans-serif", "sbicons";
        width: 100%;
        cursor: pointer;
        font-size: 14px;
        font-weight: 400;
        line-height: 1.4;
        background: transparent;
        text-indent: 0;
        color: #495057;
    }

    .themedropdown {
        display: flex;
        color: #1C1B1F !important;
        font-family: "Roboto", "Segoe UI", "GeezaPro", "DejaVu Serif", "sans-serif", "sbicons";
        width: 100%;
        cursor: pointer;
        font-size: 14px;
        font-weight: 400;
        line-height: 1.4;
        background: transparent;
        text-indent: 0;
        color: #495057;
    }

    .bootstrap5-dark .themedropdown, .bootstrap5-dark .localization {
        color: #E6E1E5 !important;
    }

    .fluent-dark .themedropdown, .fluent-dark .localization {
        color: #E6E1E5 !important;
    }

    .material3-dark .themedropdown, .material3-dark .localization {
        color: #E6E1E5 !important;
    }

    .tailwind-dark .themedropdown, .tailwind-dark .localization {
        color: #E6E1E5 !important;
    }

    .highcontrast .themedropdown,
    .fluent2-highcontrast .themedropdown,
    .tailwind3-dark .themedropdown, 
    .fluent2-dark .themedropdown,
    .highcontrast .localization,
    .fluent2-highcontrast .localization,
    .tailwind3-dark .localization,
    .fluent2-dark .localization {
        color: #E6E1E5 !important;
    }

    .icons {
        margin-right: 10px;
        margin-left: 20px;
    }

    .sf-contents {
        font-family: Roboto;
        font-size: 14px;
        font-weight: 400;
        line-height: 24px;
        text-align: left;
    }

    p {
        margin-top: 2px;
    }

        p a {
            text-decoration: none;
            color: #1C1B1F;
        }

    hr {
        border: 1px solid rgba(0, 0, 0, 0.25); /* Adjust border color and opacity */
        margin: 1rem 0;
        margin-left: 18px;
        margin-right: 18px;
    }

    .sf-other-products {
        font-family: Roboto;
        font-size: 14px;
        font-weight: 500;
        line-height: 20px;
        letter-spacing: 0.15000000596046448px;
        text-align: left;
        color: #79747E;
        margin: 15px 10px 10px 15px;
    }

    .sf-other-product-name a {
        font-family: Roboto;
        font-size: 14px;
        font-weight: 400;
        line-height: 24px;
        text-align: left;
    }

    .main-div {
        margin-top: 63px;
        background: var(--Color-variables-surface, #FFFFFF);
        border-radius: 20px 20px 0px 0px;
        width: 360px;
        /*border: 3px solid black;*/
    }
</style>
<script>

    function adjustDivHeight() {
        var settingsDiv = document.getElementById("settingsDiv");
        var dropdown = document.querySelector("#header-theme-switcher .dropdown-content"); // Adjust the selector as per your dropdown content class
        if (settingsDiv && dropdown) {
            settingsDiv.style.height = "400 px";
        }
    }

</script>
