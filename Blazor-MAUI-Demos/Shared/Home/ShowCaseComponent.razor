@using System.Threading;
@using Syncfusion.Blazor.Buttons;
@using Syncfusion.Blazor.Navigations;

@namespace Blazor_MAUI_Demos.Shared

@inject SampleService SampleService;

@if (isLazyLoad)
{
<div class="sf-showcase-demo"  style="pointer-events: none;">
    <SfCarousel Interval="10000" @ref="@CarouselRef" ButtonsVisibility="CarouselButtonVisibility.Hidden" ShowIndicators="false"> 
        <ChildContent>
             @foreach (var data in dataSource)
            {
             var showcaseBg = GetBgClass(data.Header);
             <CarouselItem>
                 <h2>See how our components can be transformed into beautiful and efficient apps</h2>
                 <div class="sf-showcase-container">
                     <div class="sf-showcase-bg @showcaseBg">
                         <div class="sf-showcase-bg-container">
                             <div class="sf-showcase-img">
                                 
                             </div>
                              <div class="sf-showcase-content">
                                  <h3>@data.Header</h3>
                                  <div class="sf-showcase-description">
                                      @data.Content
                                  </div>
                                   <div class="sf-showcase-buttons">
                                       <div class="showcase-demo-btn">
                                           <a href=@data.DemoLink target="_blank" rel="noopener">         
                                               <SfButton CssClass="e-primary" style="pointer-events:auto">View Demo</SfButton>
                                           </a>
                                       </div>
                                        <div class="showcase-github-btn">
                                            <a href=@data.GitHubLink target="_blank" rel="noopener">
                                                <SfButton CssClass="e-outline" IconCss="sbicons sf-github-logo-icon" Content="Browse code in GitHub" style="pointer-events:auto"></SfButton>
                                            </a>
                                        </div>
                                   </div>
                                    <div class="sf-showcase-progress">
                                        <SfButton IconCss="sb-icons sf-left-arrow-icon" CssClass="e-round" IsPrimary="true" @onclick="@(()=>OnNavigationPrevClick())" aria-label="Navigate to previous showcase application" style="pointer-events:auto;float: left;margin-right: 30px;"></SfButton>
                                        <div class="sf-showcase-steps">
                                            @for (var i = 0; i < dataCount; i++)
                                            {
                                                var progressClass = dataSource.IndexOf(data) == i ? "sf-showcase-progress-selected" : string.Empty;
                                                <span class="sf-showcase-step @progressClass"></span>
                                            }
                                        </div>
                                        <SfButton IconCss="sb-icons sf-right-arrow-icon" CssClass="e-round" IsPrimary="true" @onclick="@(()=>OnNavigationNextClick())" aria-label="Navigate to next showcase application" style="pointer-events:auto"></SfButton>
                                    </div> 
                              </div>
                         </div>
                     </div>
                 </div>
           </CarouselItem>
           }
        </ChildContent>
    </SfCarousel>
</div>

    @foreach (var data in dataSource)
    {
        var showcaseBg = GetBgClass(data.Header);
        var deviceImage = data.ImagePath.Replace(".png", "-device.png");
        <style>
        .sf-showcase-bg.@showcaseBg .sf-showcase-img {
            background-image: url( @data.ImagePath );
        }
        @@media (max-width: 1024px) {
            .sf-showcase-bg.@showcaseBg .sf-showcase-img {
                background-image: url( @deviceImage );
            }
        }
        </style>
    }
}


@code {

    private int dataCount;
    private bool isLazyLoad;
    private List<ShowCaseItem> dataSource;

    SfCarousel CarouselRef;

    async Task OnNavigationNextClick()
    { 
        await CarouselRef.NextAsync(); 
    }
    async Task OnNavigationPrevClick()
    { 
        await CarouselRef.PreviousAsync(); 
    }

    private string GetBgClass(string header)
    {
        return header.ToLower().Replace(" ", "-");
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        var imagePath = SampleService.ShowCaseImagePath;
        var demoPath = "https://blazor.syncfusion.com/showcase/";
        var gitHubPath = "https://github.com/syncfusion/blazor-showcase-";
       dataSource = new List<ShowCaseItem>() {
           new ShowCaseItem("Appointment Planner", "An appointment scheduling application for doctors in a clinic to manage their appointments with patients.", imagePath + "appointment-planner-app.png", demoPath + "appointmentplanner/", gitHubPath + "appointment-planner"),
           new ShowCaseItem("Document Explorer", "File management tool that allows users to navigate, access, edit, and organize various document types, including Word, PowerPoint, PDF, and image files. It features file operations (open, edit, save, delete), sorting, filtering, and search functionalities.", imagePath + "document-explorer-app.png", demoPath + "documentexplorer/", gitHubPath + "document-explorer"),
           new ShowCaseItem("Fitness Tracker", "Track and visualize data of your daily activities, diet and fasting to track fitness of daily statistics.", imagePath + "fitness-tracker-app.png", demoPath + "fitness-tracker/", gitHubPath + "fitness-tracker"),
           new ShowCaseItem("Expense Tracker", "Track and visualize your daily expenses with a great UI.", imagePath + "expense-tracker-app.png", demoPath + "expensetracker/", gitHubPath + "expense-tracker"),
           new ShowCaseItem("Health Tracker", "Track and visualize data such as calories consumed and daily activities like steps taken, water consumption, and sleep duration.", imagePath + "health-tracker-app.png", demoPath + "health-tracker/", gitHubPath + "healthtracker"),
           new ShowCaseItem("Diagram Builder", "Diagram Builder is a web application which is used to create the diagrams like Flow Chart, process diagrams and more.", imagePath + "diagram-builder-app.png", demoPath + "diagrambuilder/", gitHubPath + "diagram-builder"),
       };
       
        dataCount = dataSource.Count;
        isLazyLoad = true;
    }
}
