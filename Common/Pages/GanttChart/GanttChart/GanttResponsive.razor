@page "/gantt-chart/ganttresponsive"

@using Syncfusion.Blazor.Gantt
@using Syncfusion.Blazor.DropDowns
@using ej2_blazor_defaultdata;
@*Hidden:Lines*@
@inherits SampleBaseComponent;
@*End:Hidden*@
<SampleDescription>
    <p>This sample demonstrates the responsive behavior in the Gantt Chart.</p>
</SampleDescription>
<ActionDescription>
    <p>This sample demonstrates dynamically adjusting the chart's size based on predefined options such as small, medium, large, or none. This options allows you to customize responsively customize the width of the GanttChart.</p>
</ActionDescription>
<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">
            <div class="center" style="width:@Width">
                <div class="e-switch-control" style="width:420px">
                    <label class="responsive" style="padding: 10px 15px 10px 10px">Responsive:</label>
                    <SfDropDownList TItem="DropDownValueModel" TValue="string" PopupHeight="230px" Width="118px" @bind-Value="@SelectedDropDownValue" DataSource="@DropDownNames">
                        <DropDownListEvents TItem="DropDownValueModel" TValue="string" ValueChange="OnDropDownValueChange" />
                        <DropDownListFieldSettings Text="Name" Value="Name" />
                    </SfDropDownList>
                </div>
                <SfGantt @ref="Gantt" DataSource="@TaskCollection" Height="450px" Width="100%" AllowResizing="true" TreeColumnIndex="1" ProjectStartDate="@ProjectStartDate" ProjectEndDate="@ProjectEndDate" HighlightWeekends="true" ScrollToTaskbarOnClick="true">
                    <GanttTaskFields Id="TaskId" Name="TaskName" StartDate="StartDate" EndDate="EndDate" Duration="Duration" Progress="Progress" ParentID="ParentId" Dependency="Predecessor"></GanttTaskFields>
                    <GanttColumns>
                        <GanttColumn Field="TaskId" Width="100"></GanttColumn>
                        <GanttColumn Field="TaskName" Width="275" ClipMode="Syncfusion.Blazor.Grids.ClipMode.EllipsisWithTooltip"></GanttColumn>
                        <GanttColumn Field="StartDate" HeaderText="Start Date" MinWidth="120"></GanttColumn>
                        <GanttColumn Field="EndDate" HeaderText="End Date" MinWidth="120"></GanttColumn>
                        <GanttColumn Field="Duration" HeaderText="Duration" MinWidth="120"></GanttColumn>
                        <GanttColumn Field="Progress" HeaderText="Progress" MinWidth="120"></GanttColumn>
                        <GanttColumn Field="Predecessor" HeaderText="Dependency" MinWidth="200"></GanttColumn>
                    </GanttColumns>
                    <GanttHolidays>
                        <GanttHoliday From="new DateTime(2021, 04, 03)" To="new DateTime(2021, 04, 05)" Label="Public holiday"></GanttHoliday>
                    </GanttHolidays>
                    <GanttDayWorkingTimeCollection>
                        <GanttDayWorkingTime From="9" To="18"></GanttDayWorkingTime>
                    </GanttDayWorkingTimeCollection>
                    <GanttSplitterSettings Position="28%"></GanttSplitterSettings>
                    <GanttLabelSettings RightLabel="TaskName" TValue="WorkData.TaskData"></GanttLabelSettings>
                </SfGantt>
            </div>
        </div>
    </div>
</div>

@code {
    private DateTime ProjectStartDate { get; set; } = new DateTime(2021, 3, 28);
    private DateTime ProjectEndDate { get; set; } = new DateTime(2021, 7, 10);

    private SfGantt<WorkData.TaskData> Gantt;

    public string Width { get; set; } = "100%";
    private List<WorkData.TaskData> TaskCollection { get; set; }
    public string SelectedDropDownValue { get; set; } = "None";

    public class DropDownValueModel
    {
        public string Name { get; set; }
    }

    private List<DropDownValueModel> DropDownNames { get; } = new List<DropDownValueModel>
    {
        new DropDownValueModel { Name = "Small" },
        new DropDownValueModel { Name = "Medium" },
        new DropDownValueModel { Name = "Large" },
        new DropDownValueModel { Name = "None" }
    };

    public void OnDropDownValueChange(Syncfusion.Blazor.DropDowns.ChangeEventArgs<string, DropDownValueModel> args)
    {
        Width = args.ItemData.Name switch
        {
            "Small" => "40%",
            "Medium" => "60%",
            "Large" => "80%",
            "None" => "100%",
            _ => Width // Default to current width
        };
    }

    protected override void OnInitialized()
    {
        TaskCollection = WorkData.GetTaskCollection();
    }

}
<style>
    .responsive
    {
        font-size: 16px;
        font-weight: bold;
        padding-right: 5px;
    }

    .e-switch-control {
        display: flex;
        align-items: center;
    }
    .row {
        display: flex;
        justify-content: center;
        background: #e2dfdf70;
        flex-wrap: wrap;
    }
    .e-bigger {
    .row{
        background: #e2dfdf70;
    }
    }

    @@media only screen and (max-width: 425px) {
        .row {
            background:none !important;
        }

        .e-switch-control {
            overflow: scroll !important;
        }
        }
</style>